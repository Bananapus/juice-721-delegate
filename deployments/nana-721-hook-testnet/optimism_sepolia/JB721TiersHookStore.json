{
	"_format": "sphinx-sol-ct-artifact-1",
	"merkleRoot": "0xbd3a9757f65ebbb052bafe186035f766189ba5ef2af044ccefba79d4d0717566",
	"contractName": "JB721TiersHookStore",
	"address": "0x330C2971895A58356E04b744CB68007DDc986869",
	"abi": [
		{
			"type": "function",
			"name": "balanceOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "owner",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [
				{
					"name": "balance",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "cleanTiers",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "defaultReserveBeneficiaryOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "address"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "encodedIPFSUriOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "tierId",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "bytes32",
					"internalType": "bytes32"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "encodedTierIPFSUriOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "tokenId",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "bytes32",
					"internalType": "bytes32"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "flagsOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "tuple",
					"internalType": "struct JB721TiersHookFlags",
					"components": [
						{
							"name": "noNewTiersWithReserves",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "noNewTiersWithVotes",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "noNewTiersWithOwnerMinting",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "preventOverspending",
							"type": "bool",
							"internalType": "bool"
						}
					]
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "isTierRemoved",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "tierId",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "bool",
					"internalType": "bool"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "maxTierIdOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "numberOfBurnedFor",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "tierId",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "numberOfPendingReservesFor",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "tierId",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "numberOfReservesMintedFor",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "tierId",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "recordAddTiers",
			"inputs": [
				{
					"name": "tiersToAdd",
					"type": "tuple[]",
					"internalType": "struct JB721TierConfig[]",
					"components": [
						{
							"name": "price",
							"type": "uint104",
							"internalType": "uint104"
						},
						{
							"name": "initialSupply",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "votingUnits",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "reserveFrequency",
							"type": "uint16",
							"internalType": "uint16"
						},
						{
							"name": "reserveBeneficiary",
							"type": "address",
							"internalType": "address"
						},
						{
							"name": "encodedIPFSUri",
							"type": "bytes32",
							"internalType": "bytes32"
						},
						{
							"name": "category",
							"type": "uint24",
							"internalType": "uint24"
						},
						{
							"name": "allowOwnerMint",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "useReserveBeneficiaryAsDefault",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "transfersPausable",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "useVotingUnits",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "cannotBeRemoved",
							"type": "bool",
							"internalType": "bool"
						}
					]
				}
			],
			"outputs": [
				{
					"name": "tierIds",
					"type": "uint256[]",
					"internalType": "uint256[]"
				}
			],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "recordBurn",
			"inputs": [
				{
					"name": "tokenIds",
					"type": "uint256[]",
					"internalType": "uint256[]"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "recordFlags",
			"inputs": [
				{
					"name": "flags",
					"type": "tuple",
					"internalType": "struct JB721TiersHookFlags",
					"components": [
						{
							"name": "noNewTiersWithReserves",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "noNewTiersWithVotes",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "noNewTiersWithOwnerMinting",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "preventOverspending",
							"type": "bool",
							"internalType": "bool"
						}
					]
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "recordMint",
			"inputs": [
				{
					"name": "amount",
					"type": "uint256",
					"internalType": "uint256"
				},
				{
					"name": "tierIds",
					"type": "uint16[]",
					"internalType": "uint16[]"
				},
				{
					"name": "isOwnerMint",
					"type": "bool",
					"internalType": "bool"
				}
			],
			"outputs": [
				{
					"name": "tokenIds",
					"type": "uint256[]",
					"internalType": "uint256[]"
				},
				{
					"name": "leftoverAmount",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "recordMintReservesFor",
			"inputs": [
				{
					"name": "tierId",
					"type": "uint256",
					"internalType": "uint256"
				},
				{
					"name": "count",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [
				{
					"name": "tokenIds",
					"type": "uint256[]",
					"internalType": "uint256[]"
				}
			],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "recordRemoveTierIds",
			"inputs": [
				{
					"name": "tierIds",
					"type": "uint256[]",
					"internalType": "uint256[]"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "recordSetEncodedIPFSUriOf",
			"inputs": [
				{
					"name": "tierId",
					"type": "uint256",
					"internalType": "uint256"
				},
				{
					"name": "encodedIPFSUri",
					"type": "bytes32",
					"internalType": "bytes32"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "recordSetTokenUriResolver",
			"inputs": [
				{
					"name": "resolver",
					"type": "address",
					"internalType": "contract IJB721TokenUriResolver"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "recordTransferForTier",
			"inputs": [
				{
					"name": "tierId",
					"type": "uint256",
					"internalType": "uint256"
				},
				{
					"name": "from",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "to",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "redemptionWeightOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "tokenIds",
					"type": "uint256[]",
					"internalType": "uint256[]"
				}
			],
			"outputs": [
				{
					"name": "weight",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "reserveBeneficiaryOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "tierId",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "address"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "tierBalanceOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "owner",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "tierId",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "tierIdOfToken",
			"inputs": [
				{
					"name": "tokenId",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "pure"
		},
		{
			"type": "function",
			"name": "tierOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "id",
					"type": "uint256",
					"internalType": "uint256"
				},
				{
					"name": "includeResolvedUri",
					"type": "bool",
					"internalType": "bool"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "tuple",
					"internalType": "struct JB721Tier",
					"components": [
						{
							"name": "id",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "price",
							"type": "uint104",
							"internalType": "uint104"
						},
						{
							"name": "remainingSupply",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "initialSupply",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "votingUnits",
							"type": "uint104",
							"internalType": "uint104"
						},
						{
							"name": "reserveFrequency",
							"type": "uint16",
							"internalType": "uint16"
						},
						{
							"name": "reserveBeneficiary",
							"type": "address",
							"internalType": "address"
						},
						{
							"name": "encodedIPFSUri",
							"type": "bytes32",
							"internalType": "bytes32"
						},
						{
							"name": "category",
							"type": "uint24",
							"internalType": "uint24"
						},
						{
							"name": "allowOwnerMint",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "transfersPausable",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "cannotBeRemoved",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "resolvedUri",
							"type": "string",
							"internalType": "string"
						}
					]
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "tierOfTokenId",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "tokenId",
					"type": "uint256",
					"internalType": "uint256"
				},
				{
					"name": "includeResolvedUri",
					"type": "bool",
					"internalType": "bool"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "tuple",
					"internalType": "struct JB721Tier",
					"components": [
						{
							"name": "id",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "price",
							"type": "uint104",
							"internalType": "uint104"
						},
						{
							"name": "remainingSupply",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "initialSupply",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "votingUnits",
							"type": "uint104",
							"internalType": "uint104"
						},
						{
							"name": "reserveFrequency",
							"type": "uint16",
							"internalType": "uint16"
						},
						{
							"name": "reserveBeneficiary",
							"type": "address",
							"internalType": "address"
						},
						{
							"name": "encodedIPFSUri",
							"type": "bytes32",
							"internalType": "bytes32"
						},
						{
							"name": "category",
							"type": "uint24",
							"internalType": "uint24"
						},
						{
							"name": "allowOwnerMint",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "transfersPausable",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "cannotBeRemoved",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "resolvedUri",
							"type": "string",
							"internalType": "string"
						}
					]
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "tierVotingUnitsOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "account",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "tierId",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "tiersOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "categories",
					"type": "uint256[]",
					"internalType": "uint256[]"
				},
				{
					"name": "includeResolvedUri",
					"type": "bool",
					"internalType": "bool"
				},
				{
					"name": "startingId",
					"type": "uint256",
					"internalType": "uint256"
				},
				{
					"name": "size",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [
				{
					"name": "tiers",
					"type": "tuple[]",
					"internalType": "struct JB721Tier[]",
					"components": [
						{
							"name": "id",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "price",
							"type": "uint104",
							"internalType": "uint104"
						},
						{
							"name": "remainingSupply",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "initialSupply",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "votingUnits",
							"type": "uint104",
							"internalType": "uint104"
						},
						{
							"name": "reserveFrequency",
							"type": "uint16",
							"internalType": "uint16"
						},
						{
							"name": "reserveBeneficiary",
							"type": "address",
							"internalType": "address"
						},
						{
							"name": "encodedIPFSUri",
							"type": "bytes32",
							"internalType": "bytes32"
						},
						{
							"name": "category",
							"type": "uint24",
							"internalType": "uint24"
						},
						{
							"name": "allowOwnerMint",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "transfersPausable",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "cannotBeRemoved",
							"type": "bool",
							"internalType": "bool"
						},
						{
							"name": "resolvedUri",
							"type": "string",
							"internalType": "string"
						}
					]
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "tokenUriResolverOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "contract IJB721TokenUriResolver"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "totalRedemptionWeight",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [
				{
					"name": "weight",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "totalSupplyOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [
				{
					"name": "supply",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "votingUnitsOf",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "account",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [
				{
					"name": "units",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "event",
			"name": "CleanTiers",
			"inputs": [
				{
					"name": "hook",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				},
				{
					"name": "caller",
					"type": "address",
					"indexed": false,
					"internalType": "address"
				}
			],
			"anonymous": false
		},
		{
			"type": "error",
			"name": "CANT_MINT_MANUALLY",
			"inputs": []
		},
		{
			"type": "error",
			"name": "CANT_REMOVE_TIER",
			"inputs": []
		},
		{
			"type": "error",
			"name": "INSUFFICIENT_PENDING_RESERVES",
			"inputs": []
		},
		{
			"type": "error",
			"name": "INSUFFICIENT_SUPPLY_REMAINING",
			"inputs": []
		},
		{
			"type": "error",
			"name": "INVALID_CATEGORY_SORT_ORDER",
			"inputs": []
		},
		{
			"type": "error",
			"name": "INVALID_QUANTITY",
			"inputs": []
		},
		{
			"type": "error",
			"name": "INVALID_TIER",
			"inputs": []
		},
		{
			"type": "error",
			"name": "MANUAL_MINTING_NOT_ALLOWED",
			"inputs": []
		},
		{
			"type": "error",
			"name": "MAX_TIERS_EXCEEDED",
			"inputs": []
		},
		{
			"type": "error",
			"name": "NO_SUPPLY",
			"inputs": []
		},
		{
			"type": "error",
			"name": "PRICE_EXCEEDS_AMOUNT",
			"inputs": []
		},
		{
			"type": "error",
			"name": "RESERVE_FREQUENCY_NOT_ALLOWED",
			"inputs": []
		},
		{
			"type": "error",
			"name": "TIER_REMOVED",
			"inputs": []
		},
		{
			"type": "error",
			"name": "VOTING_UNITS_NOT_ALLOWED",
			"inputs": []
		}
	],
	"solcInputHash": "d81caa5ac61d26e075427509da5bb5f6",
	"receipt": {
		"blockHash": "0xd13e285760a688081e5225147e3475f13cb4314353f5c8210a8240dd40573924",
		"blockNumber": 14851222,
		"contractAddress": null,
		"cumulativeGasUsed": "11617014",
		"from": "0x0c1c9049564269275059032Fb484Aa2e7Ab779af",
		"gasPrice": "1000299",
		"gasUsed": "9753345",
		"hash": "0x306ac5182d0a19496e212d2ea4a2a429d56c3ceccb3e0fc18feb46240c0f5eac",
		"index": 4,
		"logs": [
			{
				"address": "0xA2eA7657440875bF916CBFC0cfA88F13e38aD463",
				"blockHash": "0xd13e285760a688081e5225147e3475f13cb4314353f5c8210a8240dd40573924",
				"blockNumber": 14851222,
				"data": "0x0000000000000000000000000000000000000000000000000000000000000000",
				"index": 51,
				"topics": [
					"0x572f161235911da04685a68c06adf558fc7e4a36909dca394650e0adc19cc93d",
					"0x0000000000000000000000000c1c9049564269275059032fb484aa2e7ab779af",
					"0x000000000000000000000000cd414df3f7b7da1f867ff6b5499879308087f0c3",
					"0x51bb29b841b9a11a9e8f731a65b8ccea32058b7abb4546211aaedc51538b5d1b"
				],
				"transactionHash": "0x306ac5182d0a19496e212d2ea4a2a429d56c3ceccb3e0fc18feb46240c0f5eac",
				"transactionIndex": 4
			},
			{
				"address": "0xA84365486B8E86808CBf72470E6203d4742A220D",
				"blockHash": "0xd13e285760a688081e5225147e3475f13cb4314353f5c8210a8240dd40573924",
				"blockNumber": 14851222,
				"data": "0x",
				"index": 52,
				"topics": [
					"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
					"0x0000000000000000000000000000000000000000000000000000000000000000",
					"0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c"
				],
				"transactionHash": "0x306ac5182d0a19496e212d2ea4a2a429d56c3ceccb3e0fc18feb46240c0f5eac",
				"transactionIndex": 4
			},
			{
				"address": "0x94BBb774520C1E0Bd2aFb9b3B63cc11102ED7A7B",
				"blockHash": "0xd13e285760a688081e5225147e3475f13cb4314353f5c8210a8240dd40573924",
				"blockNumber": 14851222,
				"data": "0x",
				"index": 53,
				"topics": [
					"0x6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb8",
					"0x000000000000000000000000cd414df3f7b7da1f867ff6b5499879308087f0c3"
				],
				"transactionHash": "0x306ac5182d0a19496e212d2ea4a2a429d56c3ceccb3e0fc18feb46240c0f5eac",
				"transactionIndex": 4
			},
			{
				"address": "0xcd414DF3f7b7dA1F867fF6B5499879308087F0c3",
				"blockHash": "0xd13e285760a688081e5225147e3475f13cb4314353f5c8210a8240dd40573924",
				"blockNumber": 14851222,
				"data": "0x0000000000000000000000000000000000000000000000000000000000000001",
				"index": 54,
				"topics": [
					"0xa65fb05c5808f5f389d72edeaf719ce38f4cc55c1f69ca3cbfb31c21501caa07",
					"0xbd3a9757f65ebbb052bafe186035f766189ba5ef2af044ccefba79d4d0717566"
				],
				"transactionHash": "0x306ac5182d0a19496e212d2ea4a2a429d56c3ceccb3e0fc18feb46240c0f5eac",
				"transactionIndex": 4
			},
			{
				"address": "0x94BBb774520C1E0Bd2aFb9b3B63cc11102ED7A7B",
				"blockHash": "0xd13e285760a688081e5225147e3475f13cb4314353f5c8210a8240dd40573924",
				"blockNumber": 14851222,
				"data": "0x",
				"index": 55,
				"topics": [
					"0x6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb8",
					"0x000000000000000000000000cd414df3f7b7da1f867ff6b5499879308087f0c3"
				],
				"transactionHash": "0x306ac5182d0a19496e212d2ea4a2a429d56c3ceccb3e0fc18feb46240c0f5eac",
				"transactionIndex": 4
			},
			{
				"address": "0xcd414DF3f7b7dA1F867fF6B5499879308087F0c3",
				"blockHash": "0xd13e285760a688081e5225147e3475f13cb4314353f5c8210a8240dd40573924",
				"blockNumber": 14851222,
				"data": "0x0000000000000000000000000000000000000000000000000000000000000002",
				"index": 56,
				"topics": [
					"0xa65fb05c5808f5f389d72edeaf719ce38f4cc55c1f69ca3cbfb31c21501caa07",
					"0xbd3a9757f65ebbb052bafe186035f766189ba5ef2af044ccefba79d4d0717566"
				],
				"transactionHash": "0x306ac5182d0a19496e212d2ea4a2a429d56c3ceccb3e0fc18feb46240c0f5eac",
				"transactionIndex": 4
			},
			{
				"address": "0x94BBb774520C1E0Bd2aFb9b3B63cc11102ED7A7B",
				"blockHash": "0xd13e285760a688081e5225147e3475f13cb4314353f5c8210a8240dd40573924",
				"blockNumber": 14851222,
				"data": "0x",
				"index": 57,
				"topics": [
					"0x6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb8",
					"0x000000000000000000000000cd414df3f7b7da1f867ff6b5499879308087f0c3"
				],
				"transactionHash": "0x306ac5182d0a19496e212d2ea4a2a429d56c3ceccb3e0fc18feb46240c0f5eac",
				"transactionIndex": 4
			},
			{
				"address": "0xcd414DF3f7b7dA1F867fF6B5499879308087F0c3",
				"blockHash": "0xd13e285760a688081e5225147e3475f13cb4314353f5c8210a8240dd40573924",
				"blockNumber": 14851222,
				"data": "0x0000000000000000000000000000000000000000000000000000000000000003",
				"index": 58,
				"topics": [
					"0xa65fb05c5808f5f389d72edeaf719ce38f4cc55c1f69ca3cbfb31c21501caa07",
					"0xbd3a9757f65ebbb052bafe186035f766189ba5ef2af044ccefba79d4d0717566"
				],
				"transactionHash": "0x306ac5182d0a19496e212d2ea4a2a429d56c3ceccb3e0fc18feb46240c0f5eac",
				"transactionIndex": 4
			}
		],
		"logsBloom": "0x
		"status": 1,
		"to": "0xA2eA7657440875bF916CBFC0cfA88F13e38aD463"
	},
	"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"type\":\"error\",\"name\":\"CANT_MINT_MANUALLY\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"CANT_REMOVE_TIER\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"INSUFFICIENT_PENDING_RESERVES\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"INSUFFICIENT_SUPPLY_REMAINING\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"INVALID_CATEGORY_SORT_ORDER\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"INVALID_QUANTITY\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"INVALID_TIER\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"MANUAL_MINTING_NOT_ALLOWED\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"MAX_TIERS_EXCEEDED\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"NO_SUPPLY\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"PRICE_EXCEEDS_AMOUNT\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"RESERVE_FREQUENCY_NOT_ALLOWED\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"TIER_REMOVED\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"VOTING_UNITS_NOT_ALLOWED\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\",\"indexed\":true},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\",\"indexed\":false}],\"type\":\"event\",\"name\":\"CleanTiers\",\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"cleanTiers\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"defaultReserveBeneficiaryOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"encodedIPFSUriOf\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"encodedTierIPFSUriOf\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"flagsOf\",\"outputs\":[{\"internalType\":\"struct JB721TiersHookFlags\",\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"internalType\":\"bool\",\"name\":\"noNewTiersWithReserves\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"noNewTiersWithVotes\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"noNewTiersWithOwnerMinting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"preventOverspending\",\"type\":\"bool\"}]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isTierRemoved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"maxTierIdOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"numberOfBurnedFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"numberOfPendingReservesFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"numberOfReservesMintedFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"struct JB721TierConfig[]\",\"name\":\"tiersToAdd\",\"type\":\"tuple[]\",\"components\":[{\"internalType\":\"uint104\",\"name\":\"price\",\"type\":\"uint104\"},{\"internalType\":\"uint32\",\"name\":\"initialSupply\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"votingUnits\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"reserveFrequency\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"reserveBeneficiary\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"encodedIPFSUri\",\"type\":\"bytes32\"},{\"internalType\":\"uint24\",\"name\":\"category\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"allowOwnerMint\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useReserveBeneficiaryAsDefault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transfersPausable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useVotingUnits\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cannotBeRemoved\",\"type\":\"bool\"}]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"recordAddTiers\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tierIds\",\"type\":\"uint256[]\"}]},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"recordBurn\"},{\"inputs\":[{\"internalType\":\"struct JB721TiersHookFlags\",\"name\":\"flags\",\"type\":\"tuple\",\"components\":[{\"internalType\":\"bool\",\"name\":\"noNewTiersWithReserves\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"noNewTiersWithVotes\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"noNewTiersWithOwnerMinting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"preventOverspending\",\"type\":\"bool\"}]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"recordFlags\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16[]\",\"name\":\"tierIds\",\"type\":\"uint16[]\"},{\"internalType\":\"bool\",\"name\":\"isOwnerMint\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"recordMint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"leftoverAmount\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"recordMintReservesFor\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}]},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tierIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"recordRemoveTierIds\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"encodedIPFSUri\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"recordSetEncodedIPFSUriOf\"},{\"inputs\":[{\"internalType\":\"contract IJB721TokenUriResolver\",\"name\":\"resolver\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"recordSetTokenUriResolver\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"recordTransferForTier\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"redemptionWeightOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"reserveBeneficiaryOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"tierBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"tierIdOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"includeResolvedUri\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"tierOf\",\"outputs\":[{\"internalType\":\"struct JB721Tier\",\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"},{\"internalType\":\"uint104\",\"name\":\"price\",\"type\":\"uint104\"},{\"internalType\":\"uint32\",\"name\":\"remainingSupply\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"initialSupply\",\"type\":\"uint32\"},{\"internalType\":\"uint104\",\"name\":\"votingUnits\",\"type\":\"uint104\"},{\"internalType\":\"uint16\",\"name\":\"reserveFrequency\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"reserveBeneficiary\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"encodedIPFSUri\",\"type\":\"bytes32\"},{\"internalType\":\"uint24\",\"name\":\"category\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"allowOwnerMint\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transfersPausable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cannotBeRemoved\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"resolvedUri\",\"type\":\"string\"}]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"includeResolvedUri\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"tierOfTokenId\",\"outputs\":[{\"internalType\":\"struct JB721Tier\",\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"},{\"internalType\":\"uint104\",\"name\":\"price\",\"type\":\"uint104\"},{\"internalType\":\"uint32\",\"name\":\"remainingSupply\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"initialSupply\",\"type\":\"uint32\"},{\"internalType\":\"uint104\",\"name\":\"votingUnits\",\"type\":\"uint104\"},{\"internalType\":\"uint16\",\"name\":\"reserveFrequency\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"reserveBeneficiary\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"encodedIPFSUri\",\"type\":\"bytes32\"},{\"internalType\":\"uint24\",\"name\":\"category\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"allowOwnerMint\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transfersPausable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cannotBeRemoved\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"resolvedUri\",\"type\":\"string\"}]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"tierVotingUnitsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"categories\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"includeResolvedUri\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startingId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"tiersOf\",\"outputs\":[{\"internalType\":\"struct JB721Tier[]\",\"name\":\"tiers\",\"type\":\"tuple[]\",\"components\":[{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"},{\"internalType\":\"uint104\",\"name\":\"price\",\"type\":\"uint104\"},{\"internalType\":\"uint32\",\"name\":\"remainingSupply\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"initialSupply\",\"type\":\"uint32\"},{\"internalType\":\"uint104\",\"name\":\"votingUnits\",\"type\":\"uint104\"},{\"internalType\":\"uint16\",\"name\":\"reserveFrequency\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"reserveBeneficiary\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"encodedIPFSUri\",\"type\":\"bytes32\"},{\"internalType\":\"uint24\",\"name\":\"category\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"allowOwnerMint\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transfersPausable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cannotBeRemoved\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"resolvedUri\",\"type\":\"string\"}]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"tokenUriResolverOf\",\"outputs\":[{\"internalType\":\"contract IJB721TokenUriResolver\",\"name\":\"\",\"type\":\"address\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"totalRedemptionWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"totalSupplyOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"votingUnitsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"units\",\"type\":\"uint256\"}]}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,address)\":{\"params\":{\"hook\":\"The 721 contract to get the balance within.\",\"owner\":\"The address to check the balance of.\"},\"returns\":{\"balance\":\"The number of NFTs the owner has from the 721 contract.\"}},\"cleanTiers(address)\":{\"params\":{\"hook\":\"The 721 contract to clean tiers for.\"}},\"encodedTierIPFSUriOf(address,uint256)\":{\"params\":{\"hook\":\"The 721 contract that the encoded IPFS URI belongs to.\",\"tokenId\":\"The token ID of the 721 to get the encoded tier IPFS URI of.\"},\"returns\":{\"_0\":\"The encoded IPFS URI.\"}},\"flagsOf(address)\":{\"params\":{\"hook\":\"The 721 contract to get the flags of.\"},\"returns\":{\"_0\":\"The flags.\"}},\"isTierRemoved(address,uint256)\":{\"params\":{\"hook\":\"The 721 contract the tier belongs to.\",\"tierId\":\"The ID of the tier to check the removal status of.\"},\"returns\":{\"_0\":\"A bool which is `true` if the tier has been removed, and `false` otherwise.\"}},\"numberOfPendingReservesFor(address,uint256)\":{\"details\":\"\\\"Pending\\\" means that the NFTs have been reserved, but have not been minted yet.\",\"params\":{\"hook\":\"The 721 contract to check for pending reserved NFTs.\",\"tierId\":\"The ID of the tier to get the number of pending reserves for.\"},\"returns\":{\"_0\":\"The number of pending reserved NFTs.\"}},\"recordAddTiers((uint104,uint32,uint32,uint16,address,bytes32,uint24,bool,bool,bool,bool,bool)[])\":{\"params\":{\"tiersToAdd\":\"The tiers to add.\"},\"returns\":{\"tierIds\":\"The IDs of the tiers being added.\"}},\"recordBurn(uint256[])\":{\"params\":{\"tokenIds\":\"The token IDs of the NFTs to burn.\"}},\"recordFlags((bool,bool,bool,bool))\":{\"params\":{\"flags\":\"The flags to set.\"}},\"recordMint(uint256,uint16[],bool)\":{\"params\":{\"amount\":\"The amount being spent on NFTs. The total price must not exceed this amount.\",\"isOwnerMint\":\"A flag indicating whether this function is being directly called by the 721 contract's owner.\",\"tierIds\":\"The IDs of the tiers to mint from.\"},\"returns\":{\"leftoverAmount\":\"The `amount` remaining after minting.\",\"tokenIds\":\"The token IDs of the NFTs which were minted.\"}},\"recordMintReservesFor(uint256,uint256)\":{\"params\":{\"count\":\"The number of reserve NFTs to mint.\",\"tierId\":\"The ID of the tier to mint reserves from.\"},\"returns\":{\"tokenIds\":\"The token IDs of the reserve NFTs which were minted.\"}},\"recordRemoveTierIds(uint256[])\":{\"params\":{\"tierIds\":\"The IDs of the tiers being removed.\"}},\"recordSetEncodedIPFSUriOf(uint256,bytes32)\":{\"params\":{\"encodedIPFSUri\":\"The encoded IPFS URI to set for the tier.\",\"tierId\":\"The ID of the tier to set the encoded IPFS URI of.\"}},\"recordSetTokenUriResolver(address)\":{\"params\":{\"resolver\":\"The resolver to set.\"}},\"recordTransferForTier(uint256,address,address)\":{\"params\":{\"from\":\"The address that the 721 is being transferred from.\",\"tierId\":\"The ID of the tier that the 721 being transferred belongs to.\",\"to\":\"The address that the 721 is being transferred to.\"}},\"redemptionWeightOf(address,uint256[])\":{\"details\":\"Redemption weight is based on 721 price.Divide this result by the `totalRedemptionWeight` to get the portion of funds that can be reclaimed by redeeming these NFTs.\",\"params\":{\"hook\":\"The 721 contract that the NFTs belong to.\",\"tokenIds\":\"The token IDs of the NFTs to get the redemption weight of.\"},\"returns\":{\"weight\":\"The redemption weight.\"}},\"reserveBeneficiaryOf(address,uint256)\":{\"params\":{\"hook\":\"The 721 contract that the tier belongs to.\",\"tierId\":\"The ID of the tier to get the reserve beneficiary of.\"},\"returns\":{\"_0\":\"The reserve beneficiary for the tier.\"}},\"tierIdOfToken(uint256)\":{\"details\":\"Tiers are 1-indexed from the `tiers` array, meaning the 0th element of the array is tier 1.\",\"params\":{\"tokenId\":\"The token ID of the 721 to get the tier ID of.\"},\"returns\":{\"_0\":\"The ID of the 721's tier.\"}},\"tierOf(address,uint256,bool)\":{\"params\":{\"hook\":\"The 721 contract to get the tier from.\",\"id\":\"The ID of the tier to get.\",\"includeResolvedUri\":\"If set to `true`, if the contract has a token URI resolver, its content will be resolved and included.\"},\"returns\":{\"_0\":\"The tier.\"}},\"tierOfTokenId(address,uint256,bool)\":{\"params\":{\"hook\":\"The 721 contract that the tier belongs to.\",\"includeResolvedUri\":\"If set to `true`, if the contract has a token URI resolver, its content will be resolved and included.\",\"tokenId\":\"The token ID of the 721 to get the tier of.\"},\"returns\":{\"_0\":\"The tier.\"}},\"tierVotingUnitsOf(address,address,uint256)\":{\"details\":\"NFTs have a tier-specific number of voting units. If the tier does not have a custom number of voting units, the price is used.\",\"params\":{\"account\":\"The address to get the voting units of within the tier.\",\"hook\":\"The 721 contract that the tier belongs to.\",\"tierId\":\"The ID of the tier to get voting units within.\"},\"returns\":{\"_0\":\"The address' voting units within the tier.\"}},\"tiersOf(address,uint256[],bool,uint256,uint256)\":{\"params\":{\"categories\":\"An array tier categories to get tiers from. Send an empty array to get all categories.\",\"hook\":\"The 721 contract to get the tiers of.\",\"includeResolvedUri\":\"If set to `true`, if the contract has a token URI resolver, its content will be resolved and included.\",\"size\":\"The number of tiers to include.\",\"startingId\":\"The ID of the first tier to get (sorted by price). Send 0 to get all active tiers.\"},\"returns\":{\"tiers\":\"An array of active 721 tiers.\"}},\"totalRedemptionWeight(address)\":{\"params\":{\"hook\":\"The 721 contract to get the total redemption weight of.\"},\"returns\":{\"weight\":\"The total redemption weight.\"}},\"totalSupplyOf(address)\":{\"params\":{\"hook\":\"The 721 contract to get a total supply of.\"},\"returns\":{\"supply\":\"The total number of NFTs minted from all tiers on the contract.\"}},\"votingUnitsOf(address,address)\":{\"details\":\"NFTs have a tier-specific number of voting units. If the tier does not have a custom number of voting units, the price is used.\",\"params\":{\"account\":\"The address to get the voting unit total of.\",\"hook\":\"The 721 contract to get the voting units within.\"},\"returns\":{\"units\":\"The total voting units the address has within the 721 contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,address)\":{\"notice\":\"Get the number of NFTs that the specified address has from the specified 721 contract (across all tiers).\"},\"cleanTiers(address)\":{\"notice\":\"Cleans an 721 contract's removed tiers from the tier sorting sequence.\"},\"defaultReserveBeneficiaryOf(address)\":{\"notice\":\"Returns the default reserve beneficiary for the provided 721 contract.\"},\"encodedIPFSUriOf(address,uint256)\":{\"notice\":\"Returns the encoded IPFS URI for the provided tier ID of the provided 721 contract.\"},\"encodedTierIPFSUriOf(address,uint256)\":{\"notice\":\"Resolves the encoded IPFS URI for the tier of the 721 with the provided token ID from the provided 721 contract.\"},\"flagsOf(address)\":{\"notice\":\"Get the flags that dictate the behavior of the provided 721 contract.\"},\"isTierRemoved(address,uint256)\":{\"notice\":\"Check if the provided tier has been removed from the provided 721 contract.\"},\"maxTierIdOf(address)\":{\"notice\":\"Returns the largest tier ID currently used on the provided 721 contract.\"},\"numberOfBurnedFor(address,uint256)\":{\"notice\":\"Returns the number of NFTs which have been burned from the provided tier ID of the provided 721 contract.\"},\"numberOfPendingReservesFor(address,uint256)\":{\"notice\":\"Get the number of pending reserve NFTs for the provided tier ID of the provided 721 contract.\"},\"numberOfReservesMintedFor(address,uint256)\":{\"notice\":\"Returns the number of reserve NFTs which have been minted from the provided tier ID of the provided 721 contract.\"},\"recordAddTiers((uint104,uint32,uint32,uint16,address,bytes32,uint24,bool,bool,bool,bool,bool)[])\":{\"notice\":\"Record newly added tiers.\"},\"recordBurn(uint256[])\":{\"notice\":\"Records 721 burns.\"},\"recordFlags((bool,bool,bool,bool))\":{\"notice\":\"Record newly set flags.\"},\"recordMint(uint256,uint16[],bool)\":{\"notice\":\"Record 721 mints from the provided tiers.\"},\"recordMintReservesFor(uint256,uint256)\":{\"notice\":\"Record reserve 721 minting for the provided tier ID on the provided 721 contract.\"},\"recordRemoveTierIds(uint256[])\":{\"notice\":\"Record tiers being removed.\"},\"recordSetEncodedIPFSUriOf(uint256,bytes32)\":{\"notice\":\"Record a new encoded IPFS URI for a tier.\"},\"recordSetTokenUriResolver(address)\":{\"notice\":\"Record a newly set token URI resolver.\"},\"recordTransferForTier(uint256,address,address)\":{\"notice\":\"Record an 721 transfer.\"},\"redemptionWeightOf(address,uint256[])\":{\"notice\":\"The combined redemption weight of the NFTs with the provided token IDs.\"},\"reserveBeneficiaryOf(address,uint256)\":{\"notice\":\"The reserve beneficiary for the provided tier ID on the provided 721 contract.\"},\"tierBalanceOf(address,address,uint256)\":{\"notice\":\"Returns the number of NFTs which the provided owner address owns from the provided 721 contract and tier ID.\"},\"tierIdOfToken(uint256)\":{\"notice\":\"The tier ID for the 721 with the provided token ID.\"},\"tierOf(address,uint256,bool)\":{\"notice\":\"Get the tier with the provided ID from the provided 721 contract.\"},\"tierOfTokenId(address,uint256,bool)\":{\"notice\":\"Get the tier of the 721 with the provided token ID in the provided 721 contract.\"},\"tierVotingUnitsOf(address,address,uint256)\":{\"notice\":\"Returns the number of voting units an addresses has within the specified tier of the specified 721 contract.\"},\"tiersOf(address,uint256[],bool,uint256,uint256)\":{\"notice\":\"Gets an array of currently active 721 tiers for the provided 721 contract.\"},\"tokenUriResolverOf(address)\":{\"notice\":\"Returns the custom token URI resolver which overrides the default token URI resolver for the provided 721 contract.\"},\"totalRedemptionWeight(address)\":{\"notice\":\"The combined redemption weight for all NFTs from the provided 721 contract.\"},\"totalSupplyOf(address)\":{\"notice\":\"Get the number of NFTs which have been minted from the provided 721 contract (across all tiers).\"},\"votingUnitsOf(address,address)\":{\"notice\":\"Get the number of voting units the provided address has for the provided 721 contract (across all tiers).\"}},\"version\":1}},\"settings\":{\"remappings\":[\"@bananapus/=node_modules/@bananapus/\",\"@chainlink/=node_modules/@chainlink/\",\"@eth-optimism/=node_modules/@eth-optimism/\",\"@openzeppelin/=node_modules/@openzeppelin/\",\"@prb/=node_modules/@prb/\",\"@scroll-tech/=node_modules/@scroll-tech/\",\"@sphinx-labs/contracts/=node_modules/@sphinx-labs/contracts/contracts/foundry/\",\"@uniswap/=node_modules/@uniswap/\",\"ds-test/=lib/forge-std/lib/ds-test/src/\",\"forge-std/=lib/forge-std/src/\",\"hardhat/=node_modules/hardhat/\",\"solmate/=node_modules/solmate/\",\"sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"],\"optimizer\":{\"enabled\":true,\"runs\":1000},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"compilationTarget\":{\"src/JB721TiersHookStore.sol\":\"JB721TiersHookStore\"},\"evmVersion\":\"paris\",\"libraries\":{}},\"sources\":{\"src/JB721TiersHookStore.sol\":{\"keccak256\":\"0x61242a526afb47721830c0815d6e7be64cad26039f36eb884cbb4783371dad11\",\"urls\":[\"bzz-raw://df7a83fcc8f17c29ac3626a461566098828f3e9addb48dff32ec2df4407b8b1f\",\"dweb:/ipfs/QmeaCHFrs9BbDWyuzhbyfDGxJNcu3dfeAd8BRJSrh5G61q\"],\"license\":\"MIT\"},\"src/interfaces/IJB721TiersHookStore.sol\":{\"keccak256\":\"0x8550e216c12c9cda865c1b1b0eb3f244aeaa8d465b197d4bd0dd8d4df265682e\",\"urls\":[\"bzz-raw://674a312f1eaffd7c6b21f58f8d4a628104e71220daf48a22237fa3bd035ddf21\",\"dweb:/ipfs/QmSRSW6cSwdpoGjVxDqiwJmJyCxfHWhCxZ2iaqeJcN2Ccy\"],\"license\":\"MIT\"},\"src/interfaces/IJB721TokenUriResolver.sol\":{\"keccak256\":\"0xfa599167098f4459320ec4141a98a17b2dfffbce422baa27d8b4e4530f61ece1\",\"urls\":[\"bzz-raw://8b758b161f4c7b520b2c34b4d91e585e961b8f4ca278eebb91d791f7f2f45140\",\"dweb:/ipfs/QmcD9DF7NJ9QykQpT4KPzm4bs3fkjzukdAUWwdU6Atfw85\"],\"license\":\"MIT\"},\"src/libraries/JBBitmap.sol\":{\"keccak256\":\"0xf9621e9eb9357169493f6ae7675396628f15a490f1f329aeca53b0ffabe306a9\",\"urls\":[\"bzz-raw://c49a2f848ee99da57f091ad603096f1828ca004ba57c56530139d5028a78d426\",\"dweb:/ipfs/QmbezDmW68RJhXYRkUEMyY49AbysZZxV9JcGkroET5ikZ9\"],\"license\":\"MIT\"},\"src/structs/JB721Tier.sol\":{\"keccak256\":\"0xb905b0613c655b13ffc95a3eaae403923727050ee70fb29913b468bd536ab230\",\"urls\":[\"bzz-raw://4331fea42b0c468c0314f1885c00fb3d471dbf7bec8d15c8f4d7abe872ccf64e\",\"dweb:/ipfs/QmYGD5cZSJGavDgcVepxcz5WbTYkTvXRaQQ2kE6u7uZLMQ\"],\"license\":\"MIT\"},\"src/structs/JB721TierConfig.sol\":{\"keccak256\":\"0x2fa9c5c8cec182b854a656d3b284e9d5306be35ad3dc4da79d65dca12b804af0\",\"urls\":[\"bzz-raw://b443a5f70195a66145ea1dade04454ce9a3ff1209e1aaecf53c8a9909b294d79\",\"dweb:/ipfs/QmUDPFZ4L6XpV3zLQUNVchUvecD4XfddKz2S46BKek5XL1\"],\"license\":\"MIT\"},\"src/structs/JB721TiersHookFlags.sol\":{\"keccak256\":\"0x283d8429f31bd58875c056515aa42abd09c95362bd929e85cfc44a0d92585766\",\"urls\":[\"bzz-raw://9a580b89fe99d9f8e930c58a4d0d63a5ff7c01c79d210af01373d066c9e72ed6\",\"dweb:/ipfs/QmdY1eSGSoTjv4KSdsG4Tm5CzJN6iqk3qTRga5ZWNbejRz\"],\"license\":\"MIT\"},\"src/structs/JBBitmapWord.sol\":{\"keccak256\":\"0xb0d5ccad8d653cf16c46a409713d6977aca88c5c9f42317dffa639422d0bdb0a\",\"urls\":[\"bzz-raw://320e3dd7898f364bf083431b7cd061a4da63902761933d3978690ba87678d8f5\",\"dweb:/ipfs/QmRoLYq4UeYYrspafqfaqrXZKm7zLmXrGruGdR4zWmnRTd\"],\"license\":\"MIT\"},\"src/structs/JBStored721Tier.sol\":{\"keccak256\":\"0x4e528eb1a3fa2cf47574e65c71992c3a87235dfe903a182009bef2c7b91fa142\",\"urls\":[\"bzz-raw://48b7d6de98ef34413a32bfc6ff537ce71a512700426ca0cf650a2796f2a060d1\",\"dweb:/ipfs/QmXatX8a8tUJoK8UDmgU8LvLKrFPhEHWxcQbZnYaJftns6\"],\"license\":\"MIT\"}},\"version\":1}",
	"args": [],
	"bytecode": "0x608060405234801561001057600080fd5b50613792806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063845104de1161010f578063c44a8e6d116100a2578063d84a72c011610071578063d84a72c0146105d6578063eaa19ab314610620578063f1bea54f14610641578063f7888aec1461066157600080fd5b8063c44a8e6d1461058a578063c8df17101461059d578063cb827e32146105b0578063cf9530d0146105c357600080fd5b80639403a74f116100de5780639403a74f14610519578063baa7e80e14610539578063bd51923c1461054c578063c2c55f941461057757600080fd5b8063845104de1461041057806386bc2be3146104e05780638f2b90a7146104f3578063933555781461050657600080fd5b80632e4d0ea81161018757806349bd1ac61161015657806349bd1ac6146103755780635f646611146103a257806364faa159146103c55780636825bb80146103e557600080fd5b80632e4d0ea8146102fe57806337f446521461031157806342f9914b1461034257806349249dc11461035557600080fd5b8063144cc2d4116101c3578063144cc2d41461028c57806320512ba1146102ad5780632ae5e492146102c05780632b7e6ef0146102d357600080fd5b806303573004146101f5578063086bb19a146102255780630fab09471461023a5780631140449214610263575b600080fd5b610208610203366004612cf9565b610674565b6040516001600160a01b0390911681526020015b60405180910390f35b610238610233366004612d25565b6106cd565b005b610208610248366004612d25565b6005602052600090815260409020546001600160a01b031681565b610208610271366004612d25565b6004602052600090815260409020546001600160a01b031681565b61029f61029a366004612d8e565b61082d565b60405190815260200161021c565b6102386102bb366004612de3565b6108ab565b61029f6102ce366004612d25565b610963565b61029f6102e1366004612cf9565b600360209081526000928352604080842090915290825290205481565b61029f61030c366004612e25565b610ad4565b61029f61031f366004612e25565b600160209081526000938452604080852082529284528284209052825290205481565b61029f610350366004612e66565b610bf8565b610368610363366004612e7f565b610c08565b60405161021c9190612f31565b610238610383366004612f44565b3360009081526006602090815260408083209483529390529190912055565b6103b56103b0366004612cf9565b61160a565b604051901515815260200161021c565b6103d86103d3366004612f7f565b611642565b60405161021c919061311a565b61029f6103f3366004612cf9565b600260209081526000928352604080842090915290825290205481565b6104a561041e366004612d25565b604080516080810182526000808252602082018190529181018290526060810191909152506001600160a01b03166000908152600a60209081526040918290208251608081018452905460ff808216151583526101008204811615159383019390935262010000810483161515938201939093526301000000909204161515606082015290565b60405161021c919081511515815260208083015115159082015260408083015115159082015260609182015115159181019190915260800190565b6102386104ee366004612de3565b61175f565b61029f610501366004612cf9565b611822565b61029f61051436600461312d565b6118d3565b61052c610527366004613166565b611a64565b60405161021c91906131e0565b610368610547366004612f44565b611d6c565b61029f61055a366004612cf9565b600660209081526000928352604080842090915290825290205481565b610238610585366004613244565b611f8b565b6103d8610598366004612f7f565b612020565b61029f6105ab366004612cf9565b61214f565b6102386105be36600461327b565b612188565b61029f6105d1366004612d25565b6121a3565b6102386105e4366004612d25565b336000908152600560205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61063361062e366004613293565b6122c6565b60405161021c9291906132f2565b61029f61064f366004612d25565b60006020819052908152604090205481565b61029f61066f36600461312d565b612635565b6001600160a01b03808316600090815260086020908152604080832085845290915281205490911680156106a95790506106c7565b50506001600160a01b03808316600090815260046020526040902054165b92915050565b60006106d8826126aa565b905060006106e78360006126eb565b90506000610708604051806040016040528060008152602001600081525090565b82156107e857610719858483612754565b6107d65761072882600161332a565b8314610784576001600160a01b0385166000908152600760209081526040808320858452909152902054831461077f576001600160a01b038516600090815260076020908152604080832085845290915290208390555b6107d2565b6001600160a01b0385166000908152600760209081526040808320858452909152902054156107d2576001600160a01b03851660009081526007602090815260408083208584529091528120555b8291505b6107e18584866127ab565b9250610708565b6040513381526001600160a01b038616907f4a0f854ce3c180d56f3e9eb47eb064c595bf3de0ab9af45425291e5b1bb733a89060200160405180910390a25050505050565b600081815b818110156108a2576001600160a01b0386166000908152600960205260408120906108748787858181106108685761086861333d565b90506020020135610bf8565b8152602081019190915260400160002054610898906001600160681b03168461332a565b9250600101610832565b50509392505050565b806000805b8281101561095c578484828181106108ca576108ca61333d565b336000908152600960209081526040808320938202959095013580835292905292909220805492945091600160f81b90046008161580159150610939576040517f750dccd600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600b6020526040902061095290856127f8565b50506001016108b0565b5050505050565b6001600160a01b03811660009081526020818152604080832054815160e081018352848152928301849052908201839052606082018390526080820183905260a0820183905260c082018390529060005b82811015610acc576001600160a01b03851660009081526009602090815260408083206001858101855290835292819020815160e08101835290546001600160681b0381168252600160681b810463ffffffff90811694830194909452600160881b810490931691810191909152600160a81b820464ffffffffff166060820152600160d01b820462ffffff166080820152600160e81b820461ffff1660a0820152600160f81b90910460ff1660c08201529250610a7f908690610a7990849061332a565b84612831565b82602001518360400151610a939190613353565b63ffffffff16610aa3919061332a565b8251610ab891906001600160681b0316613377565b610ac2908561332a565b93506001016109b4565b505050919050565b6001600160a01b0380841660009081526001602090815260408083209386168352928152828220848352905290812054808203610b15576000915050610bf1565b6001600160a01b0385166000908152600960209081526040808320868452825291829020825160e08101845290546001600160681b0381168252600160681b810463ffffffff90811693830193909352600160881b810490921692810192909252600160a81b810464ffffffffff166060830152600160d01b810462ffffff166080830152600160e81b810461ffff1660a0830152600160f81b900460ff811660c0830152600416151580610bcb578151610bd8565b816060015164ffffffffff165b610beb906001600160681b031684613377565b93505050505b9392505050565b60006106c7633b9aca00836133a4565b33600090815260208190526040902054606090829061ffff610c2a838361332a565b1115610c62576040517f378d191600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c6d336126aa565b90508267ffffffffffffffff811115610c8857610c886133b8565b604051908082528060200260200182016040528015610cb1578160200160208202803683370190505b50935060008215610ccc57610cc73360006126eb565b610ccf565b60005b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905291925090336000908152600a602090815260408083208151608081018352905460ff80821615158352610100820481161515948301949094526201000081048416151592820192909252630100000090910490911615156060820152905b878110156115e1578a8a82818110610da757610da761333d565b90506101800201803603810190610dbe9190613448565b9250610dcf6001633b9aca0061352d565b836020015163ffffffff161115610e12576040517f49016ea300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101919091528115610efa578b8b610e8660018561352d565b818110610e9557610e9561333d565b90506101800201803603810190610eac9190613448565b90508060c0015162ffffff168460c0015162ffffff161015610efa576040517f72afaf5400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82602001518015610f4357508361014001518015610f215750604084015163ffffffff1615155b80610f435750836101400151158015610f43575083516001600160681b031615155b15610f7a576040517f0312400600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825180610f8857508360e001515b8015610f9b5750606084015161ffff1615155b15610fd2576040517f2b200dcc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82604001518015610fe457508360e001515b1561101b576040517f30ec637f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836020015163ffffffff1660000361105f576040517fbcc08f2c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061106b838a61332a565b61107690600161332a565b90506040518060e0016040528086600001516001600160681b03168152602001866020015163ffffffff168152602001866020015163ffffffff168152602001866040015163ffffffff1664ffffffffff1681526020018660c0015162ffffff168152602001866060015161ffff16815260200161111b8760e001518861012001518961014001518a610160015160031b60029190911b60019290921b909217171790565b60ff9081169091523360009081526009602090815260408083208684528252918290208451815492860151938601516060870151608088015160a089015160c0998a01516001600160681b039095167fffffffffffffffffffffffffffffff000000000000000000000000000000000090971696909617600160681b63ffffffff98891602177fffffffffffff000000000000000000ffffffffffffffffffffffffffffffffff16600160881b97909316969096027fffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffff1691909117600160a81b64ffffffffff90921691909102177fff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffffff16600160d01b62ffffff958616027fff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1617600160e81b61ffff90941693909302929092177effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b92909416919091029290921790915586820151918401519181169116148015906112c6575060c085015162ffffff1615155b156112f257336000908152600d6020908152604080832060c089015162ffffff16845290915290208190555b60808501516001600160a01b0316158015906113155750606085015161ffff1615155b156113da5784610100015115611390576080850151336000908152600460205260409020546001600160a01b0390811691161461138b576080850151336000908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911790555b6113da565b60808501513360009081526008602090815260408083208584529091529020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911790555b60a0850151156114055760a08501513360009081526006602090815260408083208584529091529020555b86156115b9578660005b81156115b65761142033838c6127ab565b33600090815260096020908152604080832086845290915290205460c089015191925062ffffff600160d01b909104811691161180159061146157508a8211155b1561153a5761147183600161332a565b82146114955733600090815260076020908152604080832086845290915290208290555b336000908152600c60205260409020548a146114be57336000908152600c602052604090208a90555b6114c960018461352d565b881415806114f057503360009081526007602090815260408083208b845290915290205415155b1561152b5761150060018461352d565b881461150c578261150f565b60005b3360009081526007602090815260408083208c84529091529020555b8198508297506000915061140f565b80158061154657508a81115b156115ad5761155682600161332a565b831461157a5733600090815260076020908152604080832085845290915290208390555b336000908152600c60205260408120549399508993909250156115a857336000908152600c60205260408120555b61140f565b9096508061140f565b50505b808b84815181106115cc576115cc61333d565b60209081029190910101525050600101610d8d565b506115ec878761332a565b33600090815260208190526040902055509598975050505050505050565b6001600160a01b0382166000908152600b60205260408120819061162e9084612999565b905061163a81846129df565b949350505050565b604080516101a08101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e082018390526101008201839052610120820183905261014082018390526101608201929092526101808101919091526001600160a01b0384166000908152600960209081526040808320868452825291829020825160e08101845290546001600160681b038116825263ffffffff600160681b8204811693830193909352600160881b81049092169281019290925264ffffffffff600160a81b820416606083015262ffffff600160d01b820416608083015261ffff600160e81b82041660a083015260ff600160f81b9091041660c082015261163a9085908590856129fe565b806000805b8281101561095c5784848281811061177e5761177e61333d565b905060200201359150600061179283610bf8565b33600090815260036020908152604080832084845290915281208054929350906117bb83613540565b909155505033600090815260096020908152604080832084845290915290208054600160681b900463ffffffff1690600d6117f583613559565b91906101000a81548163ffffffff021916908363ffffffff16021790555050508080600101915050611764565b6001600160a01b03821660009081526009602090815260408083208484528252808320815160e08101835290546001600160681b0381168252600160681b810463ffffffff90811694830194909452600160881b810490931691810191909152600160a81b820464ffffffffff166060820152600160d01b820462ffffff166080820152600160e81b820461ffff1660a0820152600160f81b90910460ff1660c0820152610bf19084908490612831565b6001600160a01b03821660009081526020818152604080832054815160e081018352848152928301849052908201839052606082018390526080820183905260a0820183905260c08201839052908290825b8015611a5a576001600160a01b038088166000908152600160209081526040808320938a1683529281528282208483529052205492508215611a48576001600160a01b0387166000908152600960209081526040808320848452825291829020825160e08101845290546001600160681b0381168252600160681b810463ffffffff90811693830193909352600160881b810490921692810192909252600160a81b810464ffffffffff166060830152600160d01b810462ffffff166080830152600160e81b810461ffff1660a0830152600160f81b900460ff811660c0830152909250600416151580611a1a578251611a27565b826060015164ffffffffff165b611a3a906001600160681b031685613377565b611a44908761332a565b9550505b80611a528161357c565b915050611925565b5050505092915050565b60606000611a71886126aa565b905080600003611a815750611d62565b8267ffffffffffffffff811115611a9a57611a9a6133b8565b604051908082528060200260200182016040528015611b3357816020015b604080516101a0810182526000808252602080830182905292820181905260608083018290526080830182905260a0830182905260c0830182905260e083018290526101008301829052610120830182905261014083018290526101608301919091526101808201528252600019909201910181611ab85790505b506040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905291935090604080518082019091526000808252602082015260005b838714611d5157600088600003611bcc57611bc78d8c15611bc0578d8d85818110611bb457611bb461333d565b905060200201356126eb565b60006126eb565b611bce565b885b90505b8015801590611bdf57508785105b15611d4557611bef8d8285612754565b611d33576001600160a01b038d166000908152600960209081526040808320848452825291829020825160e08101845290546001600160681b038116825263ffffffff600160681b8204811693830193909352600160881b81049092169281019290925264ffffffffff600160a81b820416606083015262ffffff600160d01b820416608083015261ffff600160e81b82041660a083015260ff600160f81b9091041660c082015293508a15801590611cc857508b8b83818110611cb557611cb561333d565b90506020020135846080015162ffffff16115b611d45578a1580611cf957508b8b83818110611ce657611ce661333d565b90506020020135846080015162ffffff16145b15611d3357611d0a8d82868d6129fe565b8786611d1581613540565b975081518110611d2757611d2761333d565b60200260200101819052505b611d3e8d82886127ab565b9050611bd1565b50600101898110611b87575b868414611d5c578386525b50505050505b9695505050505050565b3360008181526009602090815260408083208684528252808320815160e08101835281546001600160681b0381168252600160681b810463ffffffff90811695830195909552600160881b810490941692810192909252600160a81b830464ffffffffff16606080840191909152600160d01b840462ffffff166080840152600160e81b840461ffff1660a0840152600160f81b90930460ff1660c08301529193919291611e1b918790612831565b905080841115611e56576040517e8403ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260026020908152604080832088845290915281208054869290611e8090849061332a565b9091555084905067ffffffffffffffff811115611e9f57611e9f6133b8565b604051908082528060200260200182016040528015611ec8578160200160208202803683370190505b503360009081526003602090815260408083208984529091528120549194505b85811015611a5a57611f66878386600001600d81819054906101000a900463ffffffff16611f1590613593565b91906101000a81548163ffffffff021916908363ffffffff16021790558760000160119054906101000a900463ffffffff16611f519190613353565b63ffffffff16611f61919061332a565b612ca1565b858281518110611f7857611f7861333d565b6020908102919091010152600101611ee8565b6001600160a01b03821615611fd8573360009081526001602090815260408083206001600160a01b0386168452825280832086845290915281208054909190611fd39061357c565b909155505b6001600160a01b0381161561201b573360009081526001602081815260408084206001600160a01b03861685528252808420878552909152909120805490910190555b505050565b604080516101a08101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201839052610140820183905261016082018390526101808201529061209184610bf8565b6001600160a01b0386166000908152600960209081526040808320848452825291829020825160e08101845290546001600160681b038116825263ffffffff600160681b8204811693830193909352600160881b81049092169281019290925264ffffffffff600160a81b820416606083015262ffffff600160d01b820416608083015261ffff600160e81b82041660a083015260ff600160f81b9091041660c08201529091506121469086908390866129fe565b95945050505050565b6001600160a01b03821660009081526006602052604081208161217184610bf8565b815260200190815260200160002054905092915050565b336000908152600a60205260409020819061201b82826135c0565b6040805160e08101825260008082526020808301829052828401829052606083018290526080830182905260a0830182905260c083018290526001600160a01b038516825281905291822054805b8015610acc576001600160a01b0385166000908152600960209081526040808320848452825291829020825160e08101845290546001600160681b038116825263ffffffff600160681b82048116938301849052600160881b82041693820184905264ffffffffff600160a81b820416606083015262ffffff600160d01b820416608083015261ffff600160e81b82041660a083015260ff600160f81b9091041660c082015294506122a291613353565b6122b29063ffffffff168561332a565b9350806122be8161357c565b9150506121f1565b606084836000808267ffffffffffffffff8111156122e6576122e66133b8565b60405190808252806020026020018201604052801561230f578160200160208202803683370190505b50945061232f604051806040016040528060008152602001600081525090565b60005b848110156126275789898281811061234c5761234c61333d565b9050602002016020810190612361919061365d565b61ffff169250612372338484612754565b156123a9576040517fd32cb5c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260096020908152604080832086845290915290208054909450600160f81b900460011615158880156123df575080155b15612416576040517f5ef25a7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8454600160881b900463ffffffff1660000361245e576040517f0de5859f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84546001600160681b03168710156124a2576040517f0da0c78800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160e08101825286546001600160681b0381168252600160681b810463ffffffff9081166020840152600160881b82041692820192909252600160a81b820464ffffffffff166060820152600160d01b820462ffffff166080820152600160e81b820461ffff1660a0820152600160f81b90910460ff1660c082015261252e9033908690612831565b8554600160681b900463ffffffff1611612574576040517f620ae0c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600360209081526040808320878452909152902054855460001963ffffffff600160681b80840482169283018216027fffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffffff909316929092178089556125f2938893600160881b9092048216929092036001011601612ca1565b8883815181106126045761260461333d565b60209081029190910101525083546001600160681b031690950394600101612332565b505050505094509492505050565b6001600160a01b038216600090815260208190526040812054805b80156126a2576001600160a01b03808616600090815260016020908152604080832093881683529281528282208483529052205461268e908461332a565b92508061269a8161357c565b915050612650565b505092915050565b6001600160a01b0381166000908152600c6020526040812054908190036126e657506001600160a01b0381166000908152602081905260409020545b919050565b6000811561271c576001600160a01b0383166000908152600d60209081526040808320858452909152902054612741565b6001600160a01b03831660009081526007602090815260408083208380529091529020545b9050806000036106c75750600192915050565b60006127608284612cbc565b806127775750815115801561277757506020820151155b156127a1576001600160a01b0384166000908152600b6020526040902061279e9084612999565b91505b61163a82846129df565b60008183036127bc57506000610bf1565b6001600160a01b038416600090815260076020908152604080832086845290915290205480156127ed579050610bf1565b61214684600161332a565b60006128048260081c90565b905061281261010083613678565b6000918252602093909352604090208054600190931b90921790915550565b60008160a0015161ffff166000148061285d5750816020015163ffffffff16826040015163ffffffff16145b8061287a5750600061286f8585610674565b6001600160a01b0316145b1561288757506000610bf1565b6001600160a01b0384166000908152600260209081526040808320868452825291829020549084015191840151909163ffffffff908116916128cb9184911661352d565b036128da576000915050610bf1565b600081846020015185604001510363ffffffff1603905060008460a0015161ffff168261290791906133a4565b905060008560a0015161ffff168361291f9190613678565b11156129315761292e81613540565b90505b846040015163ffffffff16818660a0015161ffff168760400151612955919061368c565b63ffffffff16612965919061332a565b11156129785750602084015163ffffffff165b8083111561298c5760009350505050610bf1565b9190910395945050505050565b604080518082019091526000808252602082015260006129b98360081c90565b604080518082018252600083815260209788529190912054815294850152509192915050565b60006129ed61010083613678565b83516001911c811614905092915050565b604080516101a08101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201839052610100820183905261012082018390526101408201839052610160820183905261018082015290612a708686610674565b9050600080600080612a9f8860c001516001811615159160028216151591600481161515916008909116151590565b9350935093509350604051806101a001604052808a63ffffffff16815260200189600001516001600160681b03168152602001896020015163ffffffff168152602001896040015163ffffffff16815260200183612afe578951612b0b565b896060015164ffffffffff165b6001600160681b031681526020016001600160a01b03871615612b32578960a00151612b35565b60005b61ffff1681526001600160a01b03808816602080840191909152908d1660009081526006825260408082208e835290925281902054908201526080808b015162ffffff1660608301528615159082015284151560a082015282151560c082015260e001881580612bbd57506001600160a01b038c811660009081526005602052604090205416155b612c80576001600160a01b03808d1660009081526005602052604081205490911690635e703e71908e90612bf2908f90612ca1565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381865afa158015612c53573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612c7b91908101906136af565b612c91565b604051806020016040528060008152505b90529a9950505050505050505050565b600081612cb2633b9aca0085613377565b610bf1919061332a565b60008260200151612ccd8360081c90565b14159392505050565b6001600160a01b0381168114612ceb57600080fd5b50565b80356126e681612cd6565b60008060408385031215612d0c57600080fd5b8235612d1781612cd6565b946020939093013593505050565b600060208284031215612d3757600080fd5b8135610bf181612cd6565b60008083601f840112612d5457600080fd5b50813567ffffffffffffffff811115612d6c57600080fd5b6020830191508360208260051b8501011115612d8757600080fd5b9250929050565b600080600060408486031215612da357600080fd5b8335612dae81612cd6565b9250602084013567ffffffffffffffff811115612dca57600080fd5b612dd686828701612d42565b9497909650939450505050565b60008060208385031215612df657600080fd5b823567ffffffffffffffff811115612e0d57600080fd5b612e1985828601612d42565b90969095509350505050565b600080600060608486031215612e3a57600080fd5b8335612e4581612cd6565b92506020840135612e5581612cd6565b929592945050506040919091013590565b600060208284031215612e7857600080fd5b5035919050565b60008060208385031215612e9257600080fd5b823567ffffffffffffffff80821115612eaa57600080fd5b818501915085601f830112612ebe57600080fd5b813581811115612ecd57600080fd5b86602061018083028501011115612ee357600080fd5b60209290920196919550909350505050565b60008151808452602080850194506020840160005b83811015612f2657815187529582019590820190600101612f0a565b509495945050505050565b602081526000610bf16020830184612ef5565b60008060408385031215612f5757600080fd5b50508035926020909101359150565b8015158114612ceb57600080fd5b80356126e681612f66565b600080600060608486031215612f9457600080fd5b8335612f9f81612cd6565b9250602084013591506040840135612fb681612f66565b809150509250925092565b60005b83811015612fdc578181015183820152602001612fc4565b50506000910152565b60008151808452612ffd816020860160208601612fc1565b601f01601f19169290920160200192915050565b805163ffffffff16825260006101a0602083015161303a60208601826001600160681b03169052565b506040830151613052604086018263ffffffff169052565b50606083015161306a606086018263ffffffff169052565b50608083015161308560808601826001600160681b03169052565b5060a083015161309b60a086018261ffff169052565b5060c08301516130b660c08601826001600160a01b03169052565b5060e083015160e0850152610100808401516130d88287018262ffffff169052565b505061012083810151151590850152610140808401511515908501526101608084015115159085015261018080840151818601839052611d6283870182612fe5565b602081526000610bf16020830184613011565b6000806040838503121561314057600080fd5b823561314b81612cd6565b9150602083013561315b81612cd6565b809150509250929050565b60008060008060008060a0878903121561317f57600080fd5b863561318a81612cd6565b9550602087013567ffffffffffffffff8111156131a657600080fd5b6131b289828a01612d42565b90965094505060408701356131c681612f66565b959894975092956060810135946080909101359350915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561323757603f19888603018452613225858351613011565b94509285019290850190600101613209565b5092979650505050505050565b60008060006060848603121561325957600080fd5b83359250602084013561326b81612cd6565b91506040840135612fb681612cd6565b60006080828403121561328d57600080fd5b50919050565b600080600080606085870312156132a957600080fd5b84359350602085013567ffffffffffffffff8111156132c757600080fd5b6132d387828801612d42565b90945092505060408501356132e781612f66565b939692955090935050565b6040815260006133056040830185612ef5565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106c7576106c7613314565b634e487b7160e01b600052603260045260246000fd5b63ffffffff82811682821603908082111561337057613370613314565b5092915050565b80820281158282048414176106c7576106c7613314565b634e487b7160e01b600052601260045260246000fd5b6000826133b3576133b361338e565b500490565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff811182821017156133f2576133f26133b8565b60405290565b80356001600160681b03811681146126e657600080fd5b803563ffffffff811681146126e657600080fd5b803561ffff811681146126e657600080fd5b803562ffffff811681146126e657600080fd5b6000610180828403121561345b57600080fd5b6134636133ce565b61346c836133f8565b815261347a6020840161340f565b602082015261348b6040840161340f565b604082015261349c60608401613423565b60608201526134ad60808401612cee565b608082015260a083013560a08201526134c860c08401613435565b60c08201526134d960e08401612f74565b60e08201526101006134ec818501612f74565b908201526101206134fe848201612f74565b90820152610140613510848201612f74565b90820152610160613522848201612f74565b908201529392505050565b818103818111156106c7576106c7613314565b60006001820161355257613552613314565b5060010190565b600063ffffffff80831681810361357257613572613314565b6001019392505050565b60008161358b5761358b613314565b506000190190565b600063ffffffff8216806135a9576135a9613314565b6000190192915050565b600081356106c781612f66565b81356135cb81612f66565b815460ff19811691151560ff16918217835560208401356135eb81612f66565b61ff0090151560081b1661ffff198216831781178455604085013561360f81612f66565b62ff000081151560101b168462ffffff1985161783171785555050505061365961363b606084016135b3565b82805463ff000000191691151560181b63ff00000016919091179055565b5050565b60006020828403121561366f57600080fd5b610bf182613423565b6000826136875761368761338e565b500690565b600063ffffffff808416806136a3576136a361338e565b92169190910692915050565b6000602082840312156136c157600080fd5b815167ffffffffffffffff808211156136d957600080fd5b818401915084601f8301126136ed57600080fd5b8151818111156136ff576136ff6133b8565b604051601f8201601f19908116603f01168101908382118183101715613727576137276133b8565b8160405282815287602084870101111561374057600080fd5b613751836020830160208801612fc1565b97965050505050505056fea2646970667358221220555d517e0836e1df015e9db3395267bd15f9ed31cf8ef0bd6f8173e0216e972f64736f6c63430008170033",
	"deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c8063845104de1161010f578063c44a8e6d116100a2578063d84a72c011610071578063d84a72c0146105d6578063eaa19ab314610620578063f1bea54f14610641578063f7888aec1461066157600080fd5b8063c44a8e6d1461058a578063c8df17101461059d578063cb827e32146105b0578063cf9530d0146105c357600080fd5b80639403a74f116100de5780639403a74f14610519578063baa7e80e14610539578063bd51923c1461054c578063c2c55f941461057757600080fd5b8063845104de1461041057806386bc2be3146104e05780638f2b90a7146104f3578063933555781461050657600080fd5b80632e4d0ea81161018757806349bd1ac61161015657806349bd1ac6146103755780635f646611146103a257806364faa159146103c55780636825bb80146103e557600080fd5b80632e4d0ea8146102fe57806337f446521461031157806342f9914b1461034257806349249dc11461035557600080fd5b8063144cc2d4116101c3578063144cc2d41461028c57806320512ba1146102ad5780632ae5e492146102c05780632b7e6ef0146102d357600080fd5b806303573004146101f5578063086bb19a146102255780630fab09471461023a5780631140449214610263575b600080fd5b610208610203366004612cf9565b610674565b6040516001600160a01b0390911681526020015b60405180910390f35b610238610233366004612d25565b6106cd565b005b610208610248366004612d25565b6005602052600090815260409020546001600160a01b031681565b610208610271366004612d25565b6004602052600090815260409020546001600160a01b031681565b61029f61029a366004612d8e565b61082d565b60405190815260200161021c565b6102386102bb366004612de3565b6108ab565b61029f6102ce366004612d25565b610963565b61029f6102e1366004612cf9565b600360209081526000928352604080842090915290825290205481565b61029f61030c366004612e25565b610ad4565b61029f61031f366004612e25565b600160209081526000938452604080852082529284528284209052825290205481565b61029f610350366004612e66565b610bf8565b610368610363366004612e7f565b610c08565b60405161021c9190612f31565b610238610383366004612f44565b3360009081526006602090815260408083209483529390529190912055565b6103b56103b0366004612cf9565b61160a565b604051901515815260200161021c565b6103d86103d3366004612f7f565b611642565b60405161021c919061311a565b61029f6103f3366004612cf9565b600260209081526000928352604080842090915290825290205481565b6104a561041e366004612d25565b604080516080810182526000808252602082018190529181018290526060810191909152506001600160a01b03166000908152600a60209081526040918290208251608081018452905460ff808216151583526101008204811615159383019390935262010000810483161515938201939093526301000000909204161515606082015290565b60405161021c919081511515815260208083015115159082015260408083015115159082015260609182015115159181019190915260800190565b6102386104ee366004612de3565b61175f565b61029f610501366004612cf9565b611822565b61029f61051436600461312d565b6118d3565b61052c610527366004613166565b611a64565b60405161021c91906131e0565b610368610547366004612f44565b611d6c565b61029f61055a366004612cf9565b600660209081526000928352604080842090915290825290205481565b610238610585366004613244565b611f8b565b6103d8610598366004612f7f565b612020565b61029f6105ab366004612cf9565b61214f565b6102386105be36600461327b565b612188565b61029f6105d1366004612d25565b6121a3565b6102386105e4366004612d25565b336000908152600560205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61063361062e366004613293565b6122c6565b60405161021c9291906132f2565b61029f61064f366004612d25565b60006020819052908152604090205481565b61029f61066f36600461312d565b612635565b6001600160a01b03808316600090815260086020908152604080832085845290915281205490911680156106a95790506106c7565b50506001600160a01b03808316600090815260046020526040902054165b92915050565b60006106d8826126aa565b905060006106e78360006126eb565b90506000610708604051806040016040528060008152602001600081525090565b82156107e857610719858483612754565b6107d65761072882600161332a565b8314610784576001600160a01b0385166000908152600760209081526040808320858452909152902054831461077f576001600160a01b038516600090815260076020908152604080832085845290915290208390555b6107d2565b6001600160a01b0385166000908152600760209081526040808320858452909152902054156107d2576001600160a01b03851660009081526007602090815260408083208584529091528120555b8291505b6107e18584866127ab565b9250610708565b6040513381526001600160a01b038616907f4a0f854ce3c180d56f3e9eb47eb064c595bf3de0ab9af45425291e5b1bb733a89060200160405180910390a25050505050565b600081815b818110156108a2576001600160a01b0386166000908152600960205260408120906108748787858181106108685761086861333d565b90506020020135610bf8565b8152602081019190915260400160002054610898906001600160681b03168461332a565b9250600101610832565b50509392505050565b806000805b8281101561095c578484828181106108ca576108ca61333d565b336000908152600960209081526040808320938202959095013580835292905292909220805492945091600160f81b90046008161580159150610939576040517f750dccd600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600b6020526040902061095290856127f8565b50506001016108b0565b5050505050565b6001600160a01b03811660009081526020818152604080832054815160e081018352848152928301849052908201839052606082018390526080820183905260a0820183905260c082018390529060005b82811015610acc576001600160a01b03851660009081526009602090815260408083206001858101855290835292819020815160e08101835290546001600160681b0381168252600160681b810463ffffffff90811694830194909452600160881b810490931691810191909152600160a81b820464ffffffffff166060820152600160d01b820462ffffff166080820152600160e81b820461ffff1660a0820152600160f81b90910460ff1660c08201529250610a7f908690610a7990849061332a565b84612831565b82602001518360400151610a939190613353565b63ffffffff16610aa3919061332a565b8251610ab891906001600160681b0316613377565b610ac2908561332a565b93506001016109b4565b505050919050565b6001600160a01b0380841660009081526001602090815260408083209386168352928152828220848352905290812054808203610b15576000915050610bf1565b6001600160a01b0385166000908152600960209081526040808320868452825291829020825160e08101845290546001600160681b0381168252600160681b810463ffffffff90811693830193909352600160881b810490921692810192909252600160a81b810464ffffffffff166060830152600160d01b810462ffffff166080830152600160e81b810461ffff1660a0830152600160f81b900460ff811660c0830152600416151580610bcb578151610bd8565b816060015164ffffffffff165b610beb906001600160681b031684613377565b93505050505b9392505050565b60006106c7633b9aca00836133a4565b33600090815260208190526040902054606090829061ffff610c2a838361332a565b1115610c62576040517f378d191600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c6d336126aa565b90508267ffffffffffffffff811115610c8857610c886133b8565b604051908082528060200260200182016040528015610cb1578160200160208202803683370190505b50935060008215610ccc57610cc73360006126eb565b610ccf565b60005b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905291925090336000908152600a602090815260408083208151608081018352905460ff80821615158352610100820481161515948301949094526201000081048416151592820192909252630100000090910490911615156060820152905b878110156115e1578a8a82818110610da757610da761333d565b90506101800201803603810190610dbe9190613448565b9250610dcf6001633b9aca0061352d565b836020015163ffffffff161115610e12576040517f49016ea300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101919091528115610efa578b8b610e8660018561352d565b818110610e9557610e9561333d565b90506101800201803603810190610eac9190613448565b90508060c0015162ffffff168460c0015162ffffff161015610efa576040517f72afaf5400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82602001518015610f4357508361014001518015610f215750604084015163ffffffff1615155b80610f435750836101400151158015610f43575083516001600160681b031615155b15610f7a576040517f0312400600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825180610f8857508360e001515b8015610f9b5750606084015161ffff1615155b15610fd2576040517f2b200dcc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82604001518015610fe457508360e001515b1561101b576040517f30ec637f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836020015163ffffffff1660000361105f576040517fbcc08f2c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061106b838a61332a565b61107690600161332a565b90506040518060e0016040528086600001516001600160681b03168152602001866020015163ffffffff168152602001866020015163ffffffff168152602001866040015163ffffffff1664ffffffffff1681526020018660c0015162ffffff168152602001866060015161ffff16815260200161111b8760e001518861012001518961014001518a610160015160031b60029190911b60019290921b909217171790565b60ff9081169091523360009081526009602090815260408083208684528252918290208451815492860151938601516060870151608088015160a089015160c0998a01516001600160681b039095167fffffffffffffffffffffffffffffff000000000000000000000000000000000090971696909617600160681b63ffffffff98891602177fffffffffffff000000000000000000ffffffffffffffffffffffffffffffffff16600160881b97909316969096027fffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffff1691909117600160a81b64ffffffffff90921691909102177fff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffffff16600160d01b62ffffff958616027fff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1617600160e81b61ffff90941693909302929092177effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b92909416919091029290921790915586820151918401519181169116148015906112c6575060c085015162ffffff1615155b156112f257336000908152600d6020908152604080832060c089015162ffffff16845290915290208190555b60808501516001600160a01b0316158015906113155750606085015161ffff1615155b156113da5784610100015115611390576080850151336000908152600460205260409020546001600160a01b0390811691161461138b576080850151336000908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911790555b6113da565b60808501513360009081526008602090815260408083208584529091529020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911790555b60a0850151156114055760a08501513360009081526006602090815260408083208584529091529020555b86156115b9578660005b81156115b65761142033838c6127ab565b33600090815260096020908152604080832086845290915290205460c089015191925062ffffff600160d01b909104811691161180159061146157508a8211155b1561153a5761147183600161332a565b82146114955733600090815260076020908152604080832086845290915290208290555b336000908152600c60205260409020548a146114be57336000908152600c602052604090208a90555b6114c960018461352d565b881415806114f057503360009081526007602090815260408083208b845290915290205415155b1561152b5761150060018461352d565b881461150c578261150f565b60005b3360009081526007602090815260408083208c84529091529020555b8198508297506000915061140f565b80158061154657508a81115b156115ad5761155682600161332a565b831461157a5733600090815260076020908152604080832085845290915290208390555b336000908152600c60205260408120549399508993909250156115a857336000908152600c60205260408120555b61140f565b9096508061140f565b50505b808b84815181106115cc576115cc61333d565b60209081029190910101525050600101610d8d565b506115ec878761332a565b33600090815260208190526040902055509598975050505050505050565b6001600160a01b0382166000908152600b60205260408120819061162e9084612999565b905061163a81846129df565b949350505050565b604080516101a08101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e082018390526101008201839052610120820183905261014082018390526101608201929092526101808101919091526001600160a01b0384166000908152600960209081526040808320868452825291829020825160e08101845290546001600160681b038116825263ffffffff600160681b8204811693830193909352600160881b81049092169281019290925264ffffffffff600160a81b820416606083015262ffffff600160d01b820416608083015261ffff600160e81b82041660a083015260ff600160f81b9091041660c082015261163a9085908590856129fe565b806000805b8281101561095c5784848281811061177e5761177e61333d565b905060200201359150600061179283610bf8565b33600090815260036020908152604080832084845290915281208054929350906117bb83613540565b909155505033600090815260096020908152604080832084845290915290208054600160681b900463ffffffff1690600d6117f583613559565b91906101000a81548163ffffffff021916908363ffffffff16021790555050508080600101915050611764565b6001600160a01b03821660009081526009602090815260408083208484528252808320815160e08101835290546001600160681b0381168252600160681b810463ffffffff90811694830194909452600160881b810490931691810191909152600160a81b820464ffffffffff166060820152600160d01b820462ffffff166080820152600160e81b820461ffff1660a0820152600160f81b90910460ff1660c0820152610bf19084908490612831565b6001600160a01b03821660009081526020818152604080832054815160e081018352848152928301849052908201839052606082018390526080820183905260a0820183905260c08201839052908290825b8015611a5a576001600160a01b038088166000908152600160209081526040808320938a1683529281528282208483529052205492508215611a48576001600160a01b0387166000908152600960209081526040808320848452825291829020825160e08101845290546001600160681b0381168252600160681b810463ffffffff90811693830193909352600160881b810490921692810192909252600160a81b810464ffffffffff166060830152600160d01b810462ffffff166080830152600160e81b810461ffff1660a0830152600160f81b900460ff811660c0830152909250600416151580611a1a578251611a27565b826060015164ffffffffff165b611a3a906001600160681b031685613377565b611a44908761332a565b9550505b80611a528161357c565b915050611925565b5050505092915050565b60606000611a71886126aa565b905080600003611a815750611d62565b8267ffffffffffffffff811115611a9a57611a9a6133b8565b604051908082528060200260200182016040528015611b3357816020015b604080516101a0810182526000808252602080830182905292820181905260608083018290526080830182905260a0830182905260c0830182905260e083018290526101008301829052610120830182905261014083018290526101608301919091526101808201528252600019909201910181611ab85790505b506040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905291935090604080518082019091526000808252602082015260005b838714611d5157600088600003611bcc57611bc78d8c15611bc0578d8d85818110611bb457611bb461333d565b905060200201356126eb565b60006126eb565b611bce565b885b90505b8015801590611bdf57508785105b15611d4557611bef8d8285612754565b611d33576001600160a01b038d166000908152600960209081526040808320848452825291829020825160e08101845290546001600160681b038116825263ffffffff600160681b8204811693830193909352600160881b81049092169281019290925264ffffffffff600160a81b820416606083015262ffffff600160d01b820416608083015261ffff600160e81b82041660a083015260ff600160f81b9091041660c082015293508a15801590611cc857508b8b83818110611cb557611cb561333d565b90506020020135846080015162ffffff16115b611d45578a1580611cf957508b8b83818110611ce657611ce661333d565b90506020020135846080015162ffffff16145b15611d3357611d0a8d82868d6129fe565b8786611d1581613540565b975081518110611d2757611d2761333d565b60200260200101819052505b611d3e8d82886127ab565b9050611bd1565b50600101898110611b87575b868414611d5c578386525b50505050505b9695505050505050565b3360008181526009602090815260408083208684528252808320815160e08101835281546001600160681b0381168252600160681b810463ffffffff90811695830195909552600160881b810490941692810192909252600160a81b830464ffffffffff16606080840191909152600160d01b840462ffffff166080840152600160e81b840461ffff1660a0840152600160f81b90930460ff1660c08301529193919291611e1b918790612831565b905080841115611e56576040517e8403ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260026020908152604080832088845290915281208054869290611e8090849061332a565b9091555084905067ffffffffffffffff811115611e9f57611e9f6133b8565b604051908082528060200260200182016040528015611ec8578160200160208202803683370190505b503360009081526003602090815260408083208984529091528120549194505b85811015611a5a57611f66878386600001600d81819054906101000a900463ffffffff16611f1590613593565b91906101000a81548163ffffffff021916908363ffffffff16021790558760000160119054906101000a900463ffffffff16611f519190613353565b63ffffffff16611f61919061332a565b612ca1565b858281518110611f7857611f7861333d565b6020908102919091010152600101611ee8565b6001600160a01b03821615611fd8573360009081526001602090815260408083206001600160a01b0386168452825280832086845290915281208054909190611fd39061357c565b909155505b6001600160a01b0381161561201b573360009081526001602081815260408084206001600160a01b03861685528252808420878552909152909120805490910190555b505050565b604080516101a08101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201839052610140820183905261016082018390526101808201529061209184610bf8565b6001600160a01b0386166000908152600960209081526040808320848452825291829020825160e08101845290546001600160681b038116825263ffffffff600160681b8204811693830193909352600160881b81049092169281019290925264ffffffffff600160a81b820416606083015262ffffff600160d01b820416608083015261ffff600160e81b82041660a083015260ff600160f81b9091041660c08201529091506121469086908390866129fe565b95945050505050565b6001600160a01b03821660009081526006602052604081208161217184610bf8565b815260200190815260200160002054905092915050565b336000908152600a60205260409020819061201b82826135c0565b6040805160e08101825260008082526020808301829052828401829052606083018290526080830182905260a0830182905260c083018290526001600160a01b038516825281905291822054805b8015610acc576001600160a01b0385166000908152600960209081526040808320848452825291829020825160e08101845290546001600160681b038116825263ffffffff600160681b82048116938301849052600160881b82041693820184905264ffffffffff600160a81b820416606083015262ffffff600160d01b820416608083015261ffff600160e81b82041660a083015260ff600160f81b9091041660c082015294506122a291613353565b6122b29063ffffffff168561332a565b9350806122be8161357c565b9150506121f1565b606084836000808267ffffffffffffffff8111156122e6576122e66133b8565b60405190808252806020026020018201604052801561230f578160200160208202803683370190505b50945061232f604051806040016040528060008152602001600081525090565b60005b848110156126275789898281811061234c5761234c61333d565b9050602002016020810190612361919061365d565b61ffff169250612372338484612754565b156123a9576040517fd32cb5c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260096020908152604080832086845290915290208054909450600160f81b900460011615158880156123df575080155b15612416576040517f5ef25a7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8454600160881b900463ffffffff1660000361245e576040517f0de5859f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84546001600160681b03168710156124a2576040517f0da0c78800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160e08101825286546001600160681b0381168252600160681b810463ffffffff9081166020840152600160881b82041692820192909252600160a81b820464ffffffffff166060820152600160d01b820462ffffff166080820152600160e81b820461ffff1660a0820152600160f81b90910460ff1660c082015261252e9033908690612831565b8554600160681b900463ffffffff1611612574576040517f620ae0c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600360209081526040808320878452909152902054855460001963ffffffff600160681b80840482169283018216027fffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffffff909316929092178089556125f2938893600160881b9092048216929092036001011601612ca1565b8883815181106126045761260461333d565b60209081029190910101525083546001600160681b031690950394600101612332565b505050505094509492505050565b6001600160a01b038216600090815260208190526040812054805b80156126a2576001600160a01b03808616600090815260016020908152604080832093881683529281528282208483529052205461268e908461332a565b92508061269a8161357c565b915050612650565b505092915050565b6001600160a01b0381166000908152600c6020526040812054908190036126e657506001600160a01b0381166000908152602081905260409020545b919050565b6000811561271c576001600160a01b0383166000908152600d60209081526040808320858452909152902054612741565b6001600160a01b03831660009081526007602090815260408083208380529091529020545b9050806000036106c75750600192915050565b60006127608284612cbc565b806127775750815115801561277757506020820151155b156127a1576001600160a01b0384166000908152600b6020526040902061279e9084612999565b91505b61163a82846129df565b60008183036127bc57506000610bf1565b6001600160a01b038416600090815260076020908152604080832086845290915290205480156127ed579050610bf1565b61214684600161332a565b60006128048260081c90565b905061281261010083613678565b6000918252602093909352604090208054600190931b90921790915550565b60008160a0015161ffff166000148061285d5750816020015163ffffffff16826040015163ffffffff16145b8061287a5750600061286f8585610674565b6001600160a01b0316145b1561288757506000610bf1565b6001600160a01b0384166000908152600260209081526040808320868452825291829020549084015191840151909163ffffffff908116916128cb9184911661352d565b036128da576000915050610bf1565b600081846020015185604001510363ffffffff1603905060008460a0015161ffff168261290791906133a4565b905060008560a0015161ffff168361291f9190613678565b11156129315761292e81613540565b90505b846040015163ffffffff16818660a0015161ffff168760400151612955919061368c565b63ffffffff16612965919061332a565b11156129785750602084015163ffffffff165b8083111561298c5760009350505050610bf1565b9190910395945050505050565b604080518082019091526000808252602082015260006129b98360081c90565b604080518082018252600083815260209788529190912054815294850152509192915050565b60006129ed61010083613678565b83516001911c811614905092915050565b604080516101a08101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201839052610100820183905261012082018390526101408201839052610160820183905261018082015290612a708686610674565b9050600080600080612a9f8860c001516001811615159160028216151591600481161515916008909116151590565b9350935093509350604051806101a001604052808a63ffffffff16815260200189600001516001600160681b03168152602001896020015163ffffffff168152602001896040015163ffffffff16815260200183612afe578951612b0b565b896060015164ffffffffff165b6001600160681b031681526020016001600160a01b03871615612b32578960a00151612b35565b60005b61ffff1681526001600160a01b03808816602080840191909152908d1660009081526006825260408082208e835290925281902054908201526080808b015162ffffff1660608301528615159082015284151560a082015282151560c082015260e001881580612bbd57506001600160a01b038c811660009081526005602052604090205416155b612c80576001600160a01b03808d1660009081526005602052604081205490911690635e703e71908e90612bf2908f90612ca1565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381865afa158015612c53573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612c7b91908101906136af565b612c91565b604051806020016040528060008152505b90529a9950505050505050505050565b600081612cb2633b9aca0085613377565b610bf1919061332a565b60008260200151612ccd8360081c90565b14159392505050565b6001600160a01b0381168114612ceb57600080fd5b50565b80356126e681612cd6565b60008060408385031215612d0c57600080fd5b8235612d1781612cd6565b946020939093013593505050565b600060208284031215612d3757600080fd5b8135610bf181612cd6565b60008083601f840112612d5457600080fd5b50813567ffffffffffffffff811115612d6c57600080fd5b6020830191508360208260051b8501011115612d8757600080fd5b9250929050565b600080600060408486031215612da357600080fd5b8335612dae81612cd6565b9250602084013567ffffffffffffffff811115612dca57600080fd5b612dd686828701612d42565b9497909650939450505050565b60008060208385031215612df657600080fd5b823567ffffffffffffffff811115612e0d57600080fd5b612e1985828601612d42565b90969095509350505050565b600080600060608486031215612e3a57600080fd5b8335612e4581612cd6565b92506020840135612e5581612cd6565b929592945050506040919091013590565b600060208284031215612e7857600080fd5b5035919050565b60008060208385031215612e9257600080fd5b823567ffffffffffffffff80821115612eaa57600080fd5b818501915085601f830112612ebe57600080fd5b813581811115612ecd57600080fd5b86602061018083028501011115612ee357600080fd5b60209290920196919550909350505050565b60008151808452602080850194506020840160005b83811015612f2657815187529582019590820190600101612f0a565b509495945050505050565b602081526000610bf16020830184612ef5565b60008060408385031215612f5757600080fd5b50508035926020909101359150565b8015158114612ceb57600080fd5b80356126e681612f66565b600080600060608486031215612f9457600080fd5b8335612f9f81612cd6565b9250602084013591506040840135612fb681612f66565b809150509250925092565b60005b83811015612fdc578181015183820152602001612fc4565b50506000910152565b60008151808452612ffd816020860160208601612fc1565b601f01601f19169290920160200192915050565b805163ffffffff16825260006101a0602083015161303a60208601826001600160681b03169052565b506040830151613052604086018263ffffffff169052565b50606083015161306a606086018263ffffffff169052565b50608083015161308560808601826001600160681b03169052565b5060a083015161309b60a086018261ffff169052565b5060c08301516130b660c08601826001600160a01b03169052565b5060e083015160e0850152610100808401516130d88287018262ffffff169052565b505061012083810151151590850152610140808401511515908501526101608084015115159085015261018080840151818601839052611d6283870182612fe5565b602081526000610bf16020830184613011565b6000806040838503121561314057600080fd5b823561314b81612cd6565b9150602083013561315b81612cd6565b809150509250929050565b60008060008060008060a0878903121561317f57600080fd5b863561318a81612cd6565b9550602087013567ffffffffffffffff8111156131a657600080fd5b6131b289828a01612d42565b90965094505060408701356131c681612f66565b959894975092956060810135946080909101359350915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561323757603f19888603018452613225858351613011565b94509285019290850190600101613209565b5092979650505050505050565b60008060006060848603121561325957600080fd5b83359250602084013561326b81612cd6565b91506040840135612fb681612cd6565b60006080828403121561328d57600080fd5b50919050565b600080600080606085870312156132a957600080fd5b84359350602085013567ffffffffffffffff8111156132c757600080fd5b6132d387828801612d42565b90945092505060408501356132e781612f66565b939692955090935050565b6040815260006133056040830185612ef5565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106c7576106c7613314565b634e487b7160e01b600052603260045260246000fd5b63ffffffff82811682821603908082111561337057613370613314565b5092915050565b80820281158282048414176106c7576106c7613314565b634e487b7160e01b600052601260045260246000fd5b6000826133b3576133b361338e565b500490565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff811182821017156133f2576133f26133b8565b60405290565b80356001600160681b03811681146126e657600080fd5b803563ffffffff811681146126e657600080fd5b803561ffff811681146126e657600080fd5b803562ffffff811681146126e657600080fd5b6000610180828403121561345b57600080fd5b6134636133ce565b61346c836133f8565b815261347a6020840161340f565b602082015261348b6040840161340f565b604082015261349c60608401613423565b60608201526134ad60808401612cee565b608082015260a083013560a08201526134c860c08401613435565b60c08201526134d960e08401612f74565b60e08201526101006134ec818501612f74565b908201526101206134fe848201612f74565b90820152610140613510848201612f74565b90820152610160613522848201612f74565b908201529392505050565b818103818111156106c7576106c7613314565b60006001820161355257613552613314565b5060010190565b600063ffffffff80831681810361357257613572613314565b6001019392505050565b60008161358b5761358b613314565b506000190190565b600063ffffffff8216806135a9576135a9613314565b6000190192915050565b600081356106c781612f66565b81356135cb81612f66565b815460ff19811691151560ff16918217835560208401356135eb81612f66565b61ff0090151560081b1661ffff198216831781178455604085013561360f81612f66565b62ff000081151560101b168462ffffff1985161783171785555050505061365961363b606084016135b3565b82805463ff000000191691151560181b63ff00000016919091179055565b5050565b60006020828403121561366f57600080fd5b610bf182613423565b6000826136875761368761338e565b500690565b600063ffffffff808416806136a3576136a361338e565b92169190910692915050565b6000602082840312156136c157600080fd5b815167ffffffffffffffff808211156136d957600080fd5b818401915084601f8301126136ed57600080fd5b8151818111156136ff576136ff6133b8565b604051601f8201601f19908116603f01168101908382118183101715613727576137276133b8565b8160405282815287602084870101111561374057600080fd5b613751836020830160208801612fc1565b97965050505050505056fea2646970667358221220555d517e0836e1df015e9db3395267bd15f9ed31cf8ef0bd6f8173e0216e972f64736f6c63430008170033",
	"devdoc": {
		"kind": "dev",
		"methods": {
			"balanceOf(address,address)": {
				"params": {
					"hook": "The 721 contract to get the balance within.",
					"owner": "The address to check the balance of."
				},
				"returns": {
					"balance": "The number of NFTs the owner has from the 721 contract."
				}
			},
			"cleanTiers(address)": {
				"params": {
					"hook": "The 721 contract to clean tiers for."
				}
			},
			"encodedTierIPFSUriOf(address,uint256)": {
				"params": {
					"hook": "The 721 contract that the encoded IPFS URI belongs to.",
					"tokenId": "The token ID of the 721 to get the encoded tier IPFS URI of."
				},
				"returns": {
					"_0": "The encoded IPFS URI."
				}
			},
			"flagsOf(address)": {
				"params": {
					"hook": "The 721 contract to get the flags of."
				},
				"returns": {
					"_0": "The flags."
				}
			},
			"isTierRemoved(address,uint256)": {
				"params": {
					"hook": "The 721 contract the tier belongs to.",
					"tierId": "The ID of the tier to check the removal status of."
				},
				"returns": {
					"_0": "A bool which is `true` if the tier has been removed, and `false` otherwise."
				}
			},
			"numberOfPendingReservesFor(address,uint256)": {
				"details": "\"Pending\" means that the NFTs have been reserved, but have not been minted yet.",
				"params": {
					"hook": "The 721 contract to check for pending reserved NFTs.",
					"tierId": "The ID of the tier to get the number of pending reserves for."
				},
				"returns": {
					"_0": "The number of pending reserved NFTs."
				}
			},
			"recordAddTiers((uint104,uint32,uint32,uint16,address,bytes32,uint24,bool,bool,bool,bool,bool)[])": {
				"params": {
					"tiersToAdd": "The tiers to add."
				},
				"returns": {
					"tierIds": "The IDs of the tiers being added."
				}
			},
			"recordBurn(uint256[])": {
				"params": {
					"tokenIds": "The token IDs of the NFTs to burn."
				}
			},
			"recordFlags((bool,bool,bool,bool))": {
				"params": {
					"flags": "The flags to set."
				}
			},
			"recordMint(uint256,uint16[],bool)": {
				"params": {
					"amount": "The amount being spent on NFTs. The total price must not exceed this amount.",
					"isOwnerMint": "A flag indicating whether this function is being directly called by the 721 contract's owner.",
					"tierIds": "The IDs of the tiers to mint from."
				},
				"returns": {
					"leftoverAmount": "The `amount` remaining after minting.",
					"tokenIds": "The token IDs of the NFTs which were minted."
				}
			},
			"recordMintReservesFor(uint256,uint256)": {
				"params": {
					"count": "The number of reserve NFTs to mint.",
					"tierId": "The ID of the tier to mint reserves from."
				},
				"returns": {
					"tokenIds": "The token IDs of the reserve NFTs which were minted."
				}
			},
			"recordRemoveTierIds(uint256[])": {
				"params": {
					"tierIds": "The IDs of the tiers being removed."
				}
			},
			"recordSetEncodedIPFSUriOf(uint256,bytes32)": {
				"params": {
					"encodedIPFSUri": "The encoded IPFS URI to set for the tier.",
					"tierId": "The ID of the tier to set the encoded IPFS URI of."
				}
			},
			"recordSetTokenUriResolver(address)": {
				"params": {
					"resolver": "The resolver to set."
				}
			},
			"recordTransferForTier(uint256,address,address)": {
				"params": {
					"from": "The address that the 721 is being transferred from.",
					"tierId": "The ID of the tier that the 721 being transferred belongs to.",
					"to": "The address that the 721 is being transferred to."
				}
			},
			"redemptionWeightOf(address,uint256[])": {
				"details": "Redemption weight is based on 721 price.Divide this result by the `totalRedemptionWeight` to get the portion of funds that can be reclaimed by redeeming these NFTs.",
				"params": {
					"hook": "The 721 contract that the NFTs belong to.",
					"tokenIds": "The token IDs of the NFTs to get the redemption weight of."
				},
				"returns": {
					"weight": "The redemption weight."
				}
			},
			"reserveBeneficiaryOf(address,uint256)": {
				"params": {
					"hook": "The 721 contract that the tier belongs to.",
					"tierId": "The ID of the tier to get the reserve beneficiary of."
				},
				"returns": {
					"_0": "The reserve beneficiary for the tier."
				}
			},
			"tierIdOfToken(uint256)": {
				"details": "Tiers are 1-indexed from the `tiers` array, meaning the 0th element of the array is tier 1.",
				"params": {
					"tokenId": "The token ID of the 721 to get the tier ID of."
				},
				"returns": {
					"_0": "The ID of the 721's tier."
				}
			},
			"tierOf(address,uint256,bool)": {
				"params": {
					"hook": "The 721 contract to get the tier from.",
					"id": "The ID of the tier to get.",
					"includeResolvedUri": "If set to `true`, if the contract has a token URI resolver, its content will be resolved and included."
				},
				"returns": {
					"_0": "The tier."
				}
			},
			"tierOfTokenId(address,uint256,bool)": {
				"params": {
					"hook": "The 721 contract that the tier belongs to.",
					"includeResolvedUri": "If set to `true`, if the contract has a token URI resolver, its content will be resolved and included.",
					"tokenId": "The token ID of the 721 to get the tier of."
				},
				"returns": {
					"_0": "The tier."
				}
			},
			"tierVotingUnitsOf(address,address,uint256)": {
				"details": "NFTs have a tier-specific number of voting units. If the tier does not have a custom number of voting units, the price is used.",
				"params": {
					"account": "The address to get the voting units of within the tier.",
					"hook": "The 721 contract that the tier belongs to.",
					"tierId": "The ID of the tier to get voting units within."
				},
				"returns": {
					"_0": "The address' voting units within the tier."
				}
			},
			"tiersOf(address,uint256[],bool,uint256,uint256)": {
				"params": {
					"categories": "An array tier categories to get tiers from. Send an empty array to get all categories.",
					"hook": "The 721 contract to get the tiers of.",
					"includeResolvedUri": "If set to `true`, if the contract has a token URI resolver, its content will be resolved and included.",
					"size": "The number of tiers to include.",
					"startingId": "The ID of the first tier to get (sorted by price). Send 0 to get all active tiers."
				},
				"returns": {
					"tiers": "An array of active 721 tiers."
				}
			},
			"totalRedemptionWeight(address)": {
				"params": {
					"hook": "The 721 contract to get the total redemption weight of."
				},
				"returns": {
					"weight": "The total redemption weight."
				}
			},
			"totalSupplyOf(address)": {
				"params": {
					"hook": "The 721 contract to get a total supply of."
				},
				"returns": {
					"supply": "The total number of NFTs minted from all tiers on the contract."
				}
			},
			"votingUnitsOf(address,address)": {
				"details": "NFTs have a tier-specific number of voting units. If the tier does not have a custom number of voting units, the price is used.",
				"params": {
					"account": "The address to get the voting unit total of.",
					"hook": "The 721 contract to get the voting units within."
				},
				"returns": {
					"units": "The total voting units the address has within the 721 contract."
				}
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {
			"balanceOf(address,address)": {
				"notice": "Get the number of NFTs that the specified address has from the specified 721 contract (across all tiers)."
			},
			"cleanTiers(address)": {
				"notice": "Cleans an 721 contract's removed tiers from the tier sorting sequence."
			},
			"defaultReserveBeneficiaryOf(address)": {
				"notice": "Returns the default reserve beneficiary for the provided 721 contract."
			},
			"encodedIPFSUriOf(address,uint256)": {
				"notice": "Returns the encoded IPFS URI for the provided tier ID of the provided 721 contract."
			},
			"encodedTierIPFSUriOf(address,uint256)": {
				"notice": "Resolves the encoded IPFS URI for the tier of the 721 with the provided token ID from the provided 721 contract."
			},
			"flagsOf(address)": {
				"notice": "Get the flags that dictate the behavior of the provided 721 contract."
			},
			"isTierRemoved(address,uint256)": {
				"notice": "Check if the provided tier has been removed from the provided 721 contract."
			},
			"maxTierIdOf(address)": {
				"notice": "Returns the largest tier ID currently used on the provided 721 contract."
			},
			"numberOfBurnedFor(address,uint256)": {
				"notice": "Returns the number of NFTs which have been burned from the provided tier ID of the provided 721 contract."
			},
			"numberOfPendingReservesFor(address,uint256)": {
				"notice": "Get the number of pending reserve NFTs for the provided tier ID of the provided 721 contract."
			},
			"numberOfReservesMintedFor(address,uint256)": {
				"notice": "Returns the number of reserve NFTs which have been minted from the provided tier ID of the provided 721 contract."
			},
			"recordAddTiers((uint104,uint32,uint32,uint16,address,bytes32,uint24,bool,bool,bool,bool,bool)[])": {
				"notice": "Record newly added tiers."
			},
			"recordBurn(uint256[])": {
				"notice": "Records 721 burns."
			},
			"recordFlags((bool,bool,bool,bool))": {
				"notice": "Record newly set flags."
			},
			"recordMint(uint256,uint16[],bool)": {
				"notice": "Record 721 mints from the provided tiers."
			},
			"recordMintReservesFor(uint256,uint256)": {
				"notice": "Record reserve 721 minting for the provided tier ID on the provided 721 contract."
			},
			"recordRemoveTierIds(uint256[])": {
				"notice": "Record tiers being removed."
			},
			"recordSetEncodedIPFSUriOf(uint256,bytes32)": {
				"notice": "Record a new encoded IPFS URI for a tier."
			},
			"recordSetTokenUriResolver(address)": {
				"notice": "Record a newly set token URI resolver."
			},
			"recordTransferForTier(uint256,address,address)": {
				"notice": "Record an 721 transfer."
			},
			"redemptionWeightOf(address,uint256[])": {
				"notice": "The combined redemption weight of the NFTs with the provided token IDs."
			},
			"reserveBeneficiaryOf(address,uint256)": {
				"notice": "The reserve beneficiary for the provided tier ID on the provided 721 contract."
			},
			"tierBalanceOf(address,address,uint256)": {
				"notice": "Returns the number of NFTs which the provided owner address owns from the provided 721 contract and tier ID."
			},
			"tierIdOfToken(uint256)": {
				"notice": "The tier ID for the 721 with the provided token ID."
			},
			"tierOf(address,uint256,bool)": {
				"notice": "Get the tier with the provided ID from the provided 721 contract."
			},
			"tierOfTokenId(address,uint256,bool)": {
				"notice": "Get the tier of the 721 with the provided token ID in the provided 721 contract."
			},
			"tierVotingUnitsOf(address,address,uint256)": {
				"notice": "Returns the number of voting units an addresses has within the specified tier of the specified 721 contract."
			},
			"tiersOf(address,uint256[],bool,uint256,uint256)": {
				"notice": "Gets an array of currently active 721 tiers for the provided 721 contract."
			},
			"tokenUriResolverOf(address)": {
				"notice": "Returns the custom token URI resolver which overrides the default token URI resolver for the provided 721 contract."
			},
			"totalRedemptionWeight(address)": {
				"notice": "The combined redemption weight for all NFTs from the provided 721 contract."
			},
			"totalSupplyOf(address)": {
				"notice": "Get the number of NFTs which have been minted from the provided 721 contract (across all tiers)."
			},
			"votingUnitsOf(address,address)": {
				"notice": "Get the number of voting units the provided address has for the provided 721 contract (across all tiers)."
			}
		},
		"version": 1
	},
	"gitCommit": "a1703301bce19f59c260f45e1b39103fab75e506",
	"sourceName": "src/JB721TiersHookStore.sol",
	"chainId": "11155420",
	"linkReferences": {},
	"deployedLinkReferences": {},
	"history": []
}